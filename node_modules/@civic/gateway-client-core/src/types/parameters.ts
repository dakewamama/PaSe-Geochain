import { LogLevel } from './log';

export type Options = {
  autoShowModal?: boolean;
  logLevel?: LogLevel;
  hideWalletPrompts?: boolean;
  clientSendsMaxRetries?: number;
  disableAutoRestartOnValidationFailure?: boolean; // when set to true, the flow will not be automatically restarted on user validation failure
};

export interface WalletAdapter {
  address: string;
}

export type GatekeeperHttpConfig = {
  baseUrl: string;
  headers: Record<string, string>;
};

export type Stage = 'local' | 'test' | 'dev' | 'preprod' | 'prod';
export type GatewayClientParameters = {
  wallet: WalletAdapter | undefined; // the wallet connected to the dApp, can be null initially pre-user wallet connection
  gatekeeperNetwork: string | undefined; // the gatekeeper network public key address
  payer?: string;
  gatekeeperSendsTransaction: boolean; // Note - cannot be true if payer is set. Used here only to send to the iframe and check if civic-sends is allowed
  stage?: Stage; // optionally set Civic gatekeeper stage (testing only), defaults to 'prod'
  redirectUrl?: string; // a redirect URL that can be used for deep-linking and mobile-web
  options?: Options; // a set of UI options
  expiryMarginSeconds?: number; // for gatekeeper networks that have pass expiry, set this value to prompt the user to refresh the pass this amount of seconds before the pass expires
  partnerAppId?: string; // the partnerAppId provided by Civic, only for partners who have registered with Civic
  expectTokenTimeoutSeconds?: number; // the time in milliseconds to wait for a token to go active before timing out
  disableInitialGatekeeperLookup?: boolean; // when set to true, the client will not call the GK-API on load
  gatekeeperConfig?: GatekeeperHttpConfig;
  flowIdPrefix?: string; // a prefix to add to the flowId
  xCivicClientHeader?: string; // If set, send this to the Gatekeeper in the X-Civic-Client header. Used for tracking the client version.
  referrer?: string; // the client referrer
  domain?: string; // the client domain
  gatekeeperPollingIntervalSeconds?: number; // the interval in seconds to poll the GK-API
};

export type DynamicGatewayClientParameters = {
  forceRequireRefresh?: boolean; // when set to true, initiates the refresh flow if the user has an active token
};
