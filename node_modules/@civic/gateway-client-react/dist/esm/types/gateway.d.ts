/// <reference types="react" />
import { ChainClientInterface, GatewayToken, Options } from '@civic/gateway-client-core';
export type { Options };
export type PendingPayload = {
    presentationRequestId: string;
};
/**
 * The properties that the component exposes to the user through useGateway
 */
export type GatewayProps = {
    requestGatewayToken?: () => void;
    gatewayStatus: GatewayStatus;
    gatewayToken?: GatewayToken;
    gatewayTokenTransaction?: string;
    civicPassSrcUrl?: string;
    pendingRequests?: PendingPayload;
};
/**
 * The properties object passed by the dApp when defining the component
 */
export type GatewayProviderProps = {
    walletAddress: string | undefined;
    gatekeeperNetwork: string | undefined;
    chainImplementation: ChainClientInterface | undefined;
    payer?: string;
    gatekeeperSendsTransaction: boolean;
    stage?: string;
    reactComponentVersion?: string;
    wrapper?: React.FC;
    logo?: string;
    redirectUrl?: string;
    options?: Options;
    expiryMarginSeconds?: number;
    partnerAppId?: string;
    forceRequireRefresh?: boolean;
    expectTokenTimeoutSeconds?: number;
    disableInitialGatekeeperLookup?: boolean;
    children?: React.ReactNode;
};
export declare enum GatewayStatus {
    UNKNOWN = 0,
    CHECKING = 1,
    NOT_REQUESTED = 2,
    COLLECTING_USER_INFORMATION = 3,
    PROOF_OF_WALLET_OWNERSHIP = 4,
    IN_REVIEW = 5,
    REJECTED = 6,
    REVOKED = 7,
    FROZEN = 8,
    ACTIVE = 9,
    ERROR = 10,
    LOCATION_NOT_SUPPORTED = 11,
    VPN_NOT_SUPPORTED = 12,
    REFRESH_TOKEN_REQUIRED = 13,
    VALIDATING_USER_INFORMATION = 14,
    USER_INFORMATION_VALIDATED = 15,
    USER_INFORMATION_REJECTED = 16
}
