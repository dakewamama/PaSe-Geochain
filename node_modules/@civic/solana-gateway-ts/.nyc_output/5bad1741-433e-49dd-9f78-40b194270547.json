{"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/index.ts":{"path":"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":126}},"13":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"14":{"start":{"line":14,"column":95},"end":{"line":14,"column":126}},"15":{"start":{"line":16,"column":16},"end":{"line":24,"column":1}},"16":{"start":{"line":17,"column":28},"end":{"line":17,"column":110}},"17":{"start":{"line":17,"column":91},"end":{"line":17,"column":106}},"18":{"start":{"line":18,"column":4},"end":{"line":23,"column":7}},"19":{"start":{"line":19,"column":36},"end":{"line":19,"column":97}},"20":{"start":{"line":19,"column":42},"end":{"line":19,"column":70}},"21":{"start":{"line":19,"column":85},"end":{"line":19,"column":95}},"22":{"start":{"line":20,"column":35},"end":{"line":20,"column":100}},"23":{"start":{"line":20,"column":41},"end":{"line":20,"column":73}},"24":{"start":{"line":20,"column":88},"end":{"line":20,"column":98}},"25":{"start":{"line":21,"column":32},"end":{"line":21,"column":116}},"26":{"start":{"line":22,"column":8},"end":{"line":22,"column":78}},"27":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"28":{"start":{"line":26,"column":0},"end":{"line":26,"column":214}},"29":{"start":{"line":27,"column":16},"end":{"line":27,"column":34}},"30":{"start":{"line":28,"column":15},"end":{"line":28,"column":30}},"31":{"start":{"line":29,"column":20},"end":{"line":29,"column":46}},"32":{"start":{"line":30,"column":27},"end":{"line":30,"column":60}},"33":{"start":{"line":31,"column":15},"end":{"line":31,"column":36}},"34":{"start":{"line":32,"column":0},"end":{"line":32,"column":52}},"35":{"start":{"line":33,"column":0},"end":{"line":33,"column":45}},"36":{"start":{"line":34,"column":0},"end":{"line":34,"column":57}},"37":{"start":{"line":35,"column":0},"end":{"line":35,"column":59}},"38":{"start":{"line":36,"column":0},"end":{"line":36,"column":42}},"39":{"start":{"line":37,"column":0},"end":{"line":37,"column":50}},"40":{"start":{"line":38,"column":0},"end":{"line":38,"column":60}},"41":{"start":{"line":56,"column":26},"end":{"line":91,"column":2}},"42":{"start":{"line":56,"column":85},"end":{"line":91,"column":2}},"43":{"start":{"line":58,"column":24},"end":{"line":65,"column":19}},"44":{"start":{"line":67,"column":36},"end":{"line":72,"column":5}},"45":{"start":{"line":73,"column":23},"end":{"line":80,"column":19}},"46":{"start":{"line":81,"column":20},"end":{"line":81,"column":86}},"47":{"start":{"line":82,"column":29},"end":{"line":84,"column":6}},"48":{"start":{"line":85,"column":4},"end":{"line":86,"column":18}},"49":{"start":{"line":86,"column":8},"end":{"line":86,"column":18}},"50":{"start":{"line":87,"column":27},"end":{"line":87,"column":154}},"51":{"start":{"line":87,"column":53},"end":{"line":87,"column":154}},"52":{"start":{"line":88,"column":4},"end":{"line":90,"column":98}},"53":{"start":{"line":90,"column":34},"end":{"line":90,"column":96}},"54":{"start":{"line":92,"column":0},"end":{"line":92,"column":46}},"55":{"start":{"line":106,"column":44},"end":{"line":123,"column":2}},"56":{"start":{"line":106,"column":103},"end":{"line":123,"column":2}},"57":{"start":{"line":107,"column":22},"end":{"line":107,"column":189}},"58":{"start":{"line":107,"column":83},"end":{"line":107,"column":187}},"59":{"start":{"line":108,"column":24},"end":{"line":108,"column":106}},"60":{"start":{"line":109,"column":4},"end":{"line":122,"column":83}},"61":{"start":{"line":111,"column":33},"end":{"line":114,"column":5}},"62":{"start":{"line":116,"column":27},"end":{"line":116,"column":44}},"63":{"start":{"line":118,"column":49},"end":{"line":118,"column":163}},"64":{"start":{"line":120,"column":24},"end":{"line":120,"column":76}},"65":{"start":{"line":122,"column":25},"end":{"line":122,"column":79}},"66":{"start":{"line":124,"column":0},"end":{"line":124,"column":82}},"67":{"start":{"line":133,"column":25},"end":{"line":136,"column":2}},"68":{"start":{"line":133,"column":84},"end":{"line":136,"column":2}},"69":{"start":{"line":134,"column":26},"end":{"line":134,"column":134}},"70":{"start":{"line":135,"column":4},"end":{"line":135,"column":62}},"71":{"start":{"line":137,"column":0},"end":{"line":137,"column":44}},"72":{"start":{"line":146,"column":29},"end":{"line":152,"column":1}},"73":{"start":{"line":147,"column":28},"end":{"line":150,"column":5}},"74":{"start":{"line":148,"column":29},"end":{"line":148,"column":147}},"75":{"start":{"line":149,"column":8},"end":{"line":149,"column":31}},"76":{"start":{"line":151,"column":4},"end":{"line":151,"column":88}},"77":{"start":{"line":153,"column":0},"end":{"line":153,"column":52}},"78":{"start":{"line":164,"column":23},"end":{"line":167,"column":1}},"79":{"start":{"line":165,"column":32},"end":{"line":165,"column":126}},"80":{"start":{"line":166,"column":4},"end":{"line":166,"column":100}},"81":{"start":{"line":168,"column":0},"end":{"line":168,"column":40}},"82":{"start":{"line":174,"column":24},"end":{"line":179,"column":2}},"83":{"start":{"line":174,"column":61},"end":{"line":179,"column":2}},"84":{"start":{"line":175,"column":20},"end":{"line":175,"column":103}},"85":{"start":{"line":176,"column":4},"end":{"line":177,"column":20}},"86":{"start":{"line":177,"column":8},"end":{"line":177,"column":20}},"87":{"start":{"line":178,"column":4},"end":{"line":178,"column":126}},"88":{"start":{"line":180,"column":0},"end":{"line":180,"column":42}},"89":{"start":{"line":187,"column":22},"end":{"line":191,"column":2}},"90":{"start":{"line":187,"column":56},"end":{"line":191,"column":2}},"91":{"start":{"line":188,"column":34},"end":{"line":188,"column":88}},"92":{"start":{"line":189,"column":20},"end":{"line":189,"column":105}},"93":{"start":{"line":190,"column":4},"end":{"line":190,"column":75}},"94":{"start":{"line":192,"column":0},"end":{"line":192,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":50},"end":{"line":13,"column":51}},"loc":{"start":{"line":13,"column":71},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":16,"column":44},"end":{"line":16,"column":45}},"loc":{"start":{"line":16,"column":89},"end":{"line":24,"column":1}},"line":16},"5":{"name":"adopt","decl":{"start":{"line":17,"column":13},"end":{"line":17,"column":18}},"loc":{"start":{"line":17,"column":26},"end":{"line":17,"column":112}},"line":17},"6":{"name":"(anonymous_6)","decl":{"start":{"line":17,"column":70},"end":{"line":17,"column":71}},"loc":{"start":{"line":17,"column":89},"end":{"line":17,"column":108}},"line":17},"7":{"name":"(anonymous_7)","decl":{"start":{"line":18,"column":36},"end":{"line":18,"column":37}},"loc":{"start":{"line":18,"column":63},"end":{"line":23,"column":5}},"line":18},"8":{"name":"fulfilled","decl":{"start":{"line":19,"column":17},"end":{"line":19,"column":26}},"loc":{"start":{"line":19,"column":34},"end":{"line":19,"column":99}},"line":19},"9":{"name":"rejected","decl":{"start":{"line":20,"column":17},"end":{"line":20,"column":25}},"loc":{"start":{"line":20,"column":33},"end":{"line":20,"column":102}},"line":20},"10":{"name":"step","decl":{"start":{"line":21,"column":17},"end":{"line":21,"column":21}},"loc":{"start":{"line":21,"column":30},"end":{"line":21,"column":118}},"line":21},"11":{"name":"(anonymous_11)","decl":{"start":{"line":56,"column":26},"end":{"line":56,"column":27}},"loc":{"start":{"line":56,"column":85},"end":{"line":91,"column":2}},"line":56},"12":{"name":"(anonymous_12)","decl":{"start":{"line":56,"column":168},"end":{"line":56,"column":169}},"loc":{"start":{"line":56,"column":247},"end":{"line":91,"column":1}},"line":56},"13":{"name":"(anonymous_13)","decl":{"start":{"line":87,"column":27},"end":{"line":87,"column":28}},"loc":{"start":{"line":87,"column":53},"end":{"line":87,"column":154}},"line":87},"14":{"name":"(anonymous_14)","decl":{"start":{"line":90,"column":16},"end":{"line":90,"column":17}},"loc":{"start":{"line":90,"column":34},"end":{"line":90,"column":96}},"line":90},"15":{"name":"(anonymous_15)","decl":{"start":{"line":106,"column":44},"end":{"line":106,"column":45}},"loc":{"start":{"line":106,"column":103},"end":{"line":123,"column":2}},"line":106},"16":{"name":"(anonymous_16)","decl":{"start":{"line":106,"column":186},"end":{"line":106,"column":187}},"loc":{"start":{"line":106,"column":281},"end":{"line":123,"column":1}},"line":106},"17":{"name":"(anonymous_17)","decl":{"start":{"line":107,"column":69},"end":{"line":107,"column":70}},"loc":{"start":{"line":107,"column":83},"end":{"line":107,"column":187}},"line":107},"18":{"name":"(anonymous_18)","decl":{"start":{"line":111,"column":13},"end":{"line":111,"column":14}},"loc":{"start":{"line":111,"column":33},"end":{"line":114,"column":5}},"line":111},"19":{"name":"(anonymous_19)","decl":{"start":{"line":116,"column":16},"end":{"line":116,"column":17}},"loc":{"start":{"line":116,"column":27},"end":{"line":116,"column":44}},"line":116},"20":{"name":"(anonymous_20)","decl":{"start":{"line":118,"column":13},"end":{"line":118,"column":14}},"loc":{"start":{"line":118,"column":49},"end":{"line":118,"column":163}},"line":118},"21":{"name":"(anonymous_21)","decl":{"start":{"line":120,"column":16},"end":{"line":120,"column":17}},"loc":{"start":{"line":120,"column":24},"end":{"line":120,"column":76}},"line":120},"22":{"name":"(anonymous_22)","decl":{"start":{"line":122,"column":14},"end":{"line":122,"column":15}},"loc":{"start":{"line":122,"column":25},"end":{"line":122,"column":79}},"line":122},"23":{"name":"(anonymous_23)","decl":{"start":{"line":133,"column":25},"end":{"line":133,"column":26}},"loc":{"start":{"line":133,"column":84},"end":{"line":136,"column":2}},"line":133},"24":{"name":"(anonymous_24)","decl":{"start":{"line":133,"column":167},"end":{"line":133,"column":168}},"loc":{"start":{"line":133,"column":240},"end":{"line":136,"column":1}},"line":133},"25":{"name":"(anonymous_25)","decl":{"start":{"line":146,"column":29},"end":{"line":146,"column":30}},"loc":{"start":{"line":146,"column":120},"end":{"line":152,"column":1}},"line":146},"26":{"name":"(anonymous_26)","decl":{"start":{"line":147,"column":28},"end":{"line":147,"column":29}},"loc":{"start":{"line":147,"column":45},"end":{"line":150,"column":5}},"line":147},"27":{"name":"(anonymous_27)","decl":{"start":{"line":164,"column":23},"end":{"line":164,"column":24}},"loc":{"start":{"line":164,"column":129},"end":{"line":167,"column":1}},"line":164},"28":{"name":"(anonymous_28)","decl":{"start":{"line":174,"column":24},"end":{"line":174,"column":25}},"loc":{"start":{"line":174,"column":61},"end":{"line":179,"column":2}},"line":174},"29":{"name":"(anonymous_29)","decl":{"start":{"line":174,"column":95},"end":{"line":174,"column":96}},"loc":{"start":{"line":174,"column":108},"end":{"line":179,"column":1}},"line":174},"30":{"name":"(anonymous_30)","decl":{"start":{"line":187,"column":22},"end":{"line":187,"column":23}},"loc":{"start":{"line":187,"column":56},"end":{"line":191,"column":2}},"line":187},"31":{"name":"(anonymous_31)","decl":{"start":{"line":187,"column":90},"end":{"line":187,"column":91}},"loc":{"start":{"line":187,"column":103},"end":{"line":191,"column":1}},"line":187}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":45}},{"start":{"line":13,"column":50},"end":{"line":15,"column":1}}],"line":13},"9":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"type":"if","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},{"start":{"line":14,"column":21},"end":{"line":14,"column":126}}],"line":14},"10":{"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":93}},"type":"binary-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":40}},{"start":{"line":14,"column":44},"end":{"line":14,"column":93}}],"line":14},"11":{"loc":{"start":{"line":16,"column":16},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":16,"column":17},"end":{"line":16,"column":21}},{"start":{"line":16,"column":25},"end":{"line":16,"column":39}},{"start":{"line":16,"column":44},"end":{"line":24,"column":1}}],"line":16},"12":{"loc":{"start":{"line":17,"column":35},"end":{"line":17,"column":109}},"type":"cond-expr","locations":[{"start":{"line":17,"column":56},"end":{"line":17,"column":61}},{"start":{"line":17,"column":64},"end":{"line":17,"column":109}}],"line":17},"13":{"loc":{"start":{"line":18,"column":16},"end":{"line":18,"column":34}},"type":"binary-expr","locations":[{"start":{"line":18,"column":16},"end":{"line":18,"column":17}},{"start":{"line":18,"column":22},"end":{"line":18,"column":33}}],"line":18},"14":{"loc":{"start":{"line":21,"column":32},"end":{"line":21,"column":115}},"type":"cond-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":67}},{"start":{"line":21,"column":70},"end":{"line":21,"column":115}}],"line":21},"15":{"loc":{"start":{"line":22,"column":51},"end":{"line":22,"column":67}},"type":"binary-expr","locations":[{"start":{"line":22,"column":51},"end":{"line":22,"column":61}},{"start":{"line":22,"column":65},"end":{"line":22,"column":67}}],"line":22},"16":{"loc":{"start":{"line":56,"column":217},"end":{"line":56,"column":239}},"type":"default-arg","locations":[{"start":{"line":56,"column":234},"end":{"line":56,"column":239}}],"line":56},"17":{"loc":{"start":{"line":58,"column":24},"end":{"line":65,"column":19}},"type":"cond-expr","locations":[{"start":{"line":59,"column":10},"end":{"line":64,"column":9}},{"start":{"line":65,"column":10},"end":{"line":65,"column":19}}],"line":58},"18":{"loc":{"start":{"line":73,"column":23},"end":{"line":80,"column":19}},"type":"cond-expr","locations":[{"start":{"line":74,"column":10},"end":{"line":79,"column":9}},{"start":{"line":80,"column":10},"end":{"line":80,"column":19}}],"line":73},"19":{"loc":{"start":{"line":85,"column":4},"end":{"line":86,"column":18}},"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":86,"column":18}},{"start":{"line":85,"column":4},"end":{"line":86,"column":18}}],"line":85},"20":{"loc":{"start":{"line":90,"column":34},"end":{"line":90,"column":96}},"type":"binary-expr","locations":[{"start":{"line":90,"column":34},"end":{"line":90,"column":78}},{"start":{"line":90,"column":82},"end":{"line":90,"column":96}}],"line":90},"21":{"loc":{"start":{"line":106,"column":235},"end":{"line":106,"column":257}},"type":"default-arg","locations":[{"start":{"line":106,"column":252},"end":{"line":106,"column":257}}],"line":106},"22":{"loc":{"start":{"line":106,"column":259},"end":{"line":106,"column":269}},"type":"default-arg","locations":[{"start":{"line":106,"column":268},"end":{"line":106,"column":269}}],"line":106},"23":{"loc":{"start":{"line":106,"column":271},"end":{"line":106,"column":279}},"type":"default-arg","locations":[{"start":{"line":106,"column":278},"end":{"line":106,"column":279}}],"line":106},"24":{"loc":{"start":{"line":120,"column":24},"end":{"line":120,"column":76}},"type":"binary-expr","locations":[{"start":{"line":120,"column":24},"end":{"line":120,"column":58}},{"start":{"line":120,"column":62},"end":{"line":120,"column":76}}],"line":120},"25":{"loc":{"start":{"line":122,"column":25},"end":{"line":122,"column":79}},"type":"cond-expr","locations":[{"start":{"line":122,"column":55},"end":{"line":122,"column":56}},{"start":{"line":122,"column":59},"end":{"line":122,"column":79}}],"line":122},"26":{"loc":{"start":{"line":122,"column":59},"end":{"line":122,"column":79}},"type":"cond-expr","locations":[{"start":{"line":122,"column":73},"end":{"line":122,"column":75}},{"start":{"line":122,"column":78},"end":{"line":122,"column":79}}],"line":122},"27":{"loc":{"start":{"line":133,"column":216},"end":{"line":133,"column":238}},"type":"default-arg","locations":[{"start":{"line":133,"column":233},"end":{"line":133,"column":238}}],"line":133},"28":{"loc":{"start":{"line":135,"column":11},"end":{"line":135,"column":61}},"type":"cond-expr","locations":[{"start":{"line":135,"column":38},"end":{"line":135,"column":54}},{"start":{"line":135,"column":57},"end":{"line":135,"column":61}}],"line":135},"29":{"loc":{"start":{"line":146,"column":73},"end":{"line":146,"column":115}},"type":"default-arg","locations":[{"start":{"line":146,"column":86},"end":{"line":146,"column":115}}],"line":146},"30":{"loc":{"start":{"line":164,"column":72},"end":{"line":164,"column":114}},"type":"default-arg","locations":[{"start":{"line":164,"column":85},"end":{"line":164,"column":114}}],"line":164},"31":{"loc":{"start":{"line":164,"column":116},"end":{"line":164,"column":124}},"type":"default-arg","locations":[{"start":{"line":164,"column":123},"end":{"line":164,"column":124}}],"line":164},"32":{"loc":{"start":{"line":176,"column":4},"end":{"line":177,"column":20}},"type":"if","locations":[{"start":{"line":176,"column":4},"end":{"line":177,"column":20}},{"start":{"line":176,"column":4},"end":{"line":177,"column":20}}],"line":176},"33":{"loc":{"start":{"line":190,"column":11},"end":{"line":190,"column":74}},"type":"binary-expr","locations":[{"start":{"line":190,"column":11},"end":{"line":190,"column":26}},{"start":{"line":190,"column":30},"end":{"line":190,"column":74}}],"line":190}},"s":{"0":1,"1":41,"2":41,"3":41,"4":41,"5":41,"6":1057,"7":41,"8":0,"9":0,"10":0,"11":1,"12":7,"13":41,"14":41,"15":1,"16":24,"17":0,"18":15,"19":24,"20":24,"21":0,"22":0,"23":0,"24":0,"25":39,"26":15,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":6,"43":6,"44":6,"45":6,"46":6,"47":6,"48":6,"49":0,"50":6,"51":5,"52":6,"53":5,"54":1,"55":1,"56":9,"57":9,"58":150,"59":9,"60":9,"61":127,"62":127,"63":7,"64":7,"65":2,"66":1,"67":1,"68":0,"69":0,"70":0,"71":1,"72":1,"73":3,"74":3,"75":3,"76":3,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":1,"90":0,"91":0,"92":0,"93":0,"94":1},"f":{"0":41,"1":1057,"2":0,"3":7,"4":15,"5":24,"6":0,"7":15,"8":24,"9":0,"10":39,"11":6,"12":6,"13":5,"14":5,"15":9,"16":9,"17":150,"18":127,"19":127,"20":7,"21":7,"22":2,"23":0,"24":0,"25":3,"26":3,"27":1,"28":0,"29":0,"30":0,"31":0},"b":{"0":[1,1,1],"1":[1,0],"2":[41,0],"3":[41,0],"4":[41,41],"5":[0,41],"6":[41,0],"7":[0,0],"8":[1,1,1],"9":[41,0],"10":[41,41],"11":[1,1,1],"12":[24,0],"13":[15,15],"14":[15,24],"15":[15,0],"16":[4],"17":[6,0],"18":[0,6],"19":[0,6],"20":[5,3],"21":[3],"22":[6],"23":[6],"24":[7,3],"25":[0,2],"26":[2,0],"27":[0],"28":[0,0],"29":[2],"30":[1],"31":[1],"32":[0,0],"33":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/index.ts","sources":["/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AccountInfo,\n  Commitment,\n  Connection,\n  GetProgramAccountsFilter,\n  PublicKey,\n} from \"@solana/web3.js\";\nimport { GatewayToken, ProgramAccountResponse, State } from \"./types\";\nimport { encode } from \"bs58\";\nimport { PROGRAM_ID, SOLANA_COMMITMENT } from \"./lib/constants\";\nimport { GatewayTokenData } from \"./lib/GatewayTokenData\";\nimport { NetworkFeature } from \"./lib/GatewayNetworkData\";\nimport {\n  dataToGatewayToken,\n  GATEWAY_TOKEN_ACCOUNT_GATEKEEPER_NETWORK_FIELD_OFFSET,\n  GATEWAY_TOKEN_ACCOUNT_OWNER_FIELD_OFFSET,\n  getFeatureAccountAddress,\n  getGatewayTokenAddressForOwnerAndGatekeeperNetwork,\n} from \"./lib/util\";\n\nexport * from \"./lib/instruction\";\nexport * from \"./lib/util\";\nexport * from \"./lib/GatewayTokenData\";\nexport * from \"./lib/GatewayNetworkData\";\nexport * from \"./types\";\nexport * from \"./lib/constants\";\nexport * from \"./lib/AssignablePublicKey\";\n\n/**\n * Find all gateway tokens (optionally for a user) on a gatekeeper network, optionally filtering out revoked tokens.\n *\n * Warning - this uses the Solana getProgramAccounts RPC endpoint, which is inefficient and may be\n * blocked by some RPC services.\n *\n * @param connection A solana connection object\n * @param owner The token owner (optional)\n * @param gatekeeperNetwork The network to find a token for\n * @param {boolean=false} includeRevoked If false (default), filter out revoked tokens\n * @param page If a large number of tokens has been issued, the request to the RPC endpoint may time out.\n * In this case, enable pagination by setting page variable\n * Pagination is not supported in the RPC API per-se, but this approximates it by\n * adding another filter on the first byte of the owner address.\n * Each page requests the accounts that match that byte.\n * @returns {Promise<GatewayToken[]>} All tokens for the owner\n */\nexport const findGatewayTokens = async (\n  connection: Connection,\n  owner: PublicKey | undefined,\n  gatekeeperNetwork: PublicKey,\n  includeRevoked = false,\n  page?: number,\n): Promise<GatewayToken[]> => {\n  // if owner is specified, filter on the gateway token owner\n  const ownerFilter = owner\n    ? {\n        memcmp: {\n          offset: GATEWAY_TOKEN_ACCOUNT_OWNER_FIELD_OFFSET,\n          bytes: owner.toBase58(),\n        },\n      }\n    : undefined;\n\n  // filter on the gatekeeper network\n  const gatekeeperNetworkFilter = {\n    memcmp: {\n      offset: GATEWAY_TOKEN_ACCOUNT_GATEKEEPER_NETWORK_FIELD_OFFSET,\n      bytes: gatekeeperNetwork.toBase58(),\n    },\n  };\n\n  const pageFilter =\n    page !== undefined\n      ? {\n          memcmp: {\n            offset: GATEWAY_TOKEN_ACCOUNT_OWNER_FIELD_OFFSET,\n            bytes: encode([page]),\n          },\n        }\n      : undefined;\n\n  const filters = [ownerFilter, gatekeeperNetworkFilter, pageFilter].filter(\n    Boolean,\n  ) as GetProgramAccountsFilter[];\n\n  const accountsResponse = await connection.getProgramAccounts(PROGRAM_ID, {\n    filters,\n  });\n\n  if (!accountsResponse) return [];\n\n  const toGatewayToken = ({\n    pubkey,\n    account,\n  }: ProgramAccountResponse): GatewayToken =>\n    dataToGatewayToken(GatewayTokenData.fromAccount(account.data), pubkey);\n\n  return accountsResponse\n    .map(toGatewayToken)\n    .filter(\n      (gatewayToken) => gatewayToken.state !== State.REVOKED || includeRevoked,\n    );\n};\n\n/**\n * Finds all gateway tokens for a user by iterating through the index seed\n * and requesting a page of addresses at a time.\n *\n * It assumes a small number of passes per GKN, so the page size by default is 5.\n * Sorts the result by active status and expiry, so unexpired active passes appear first\n * @param connection\n * @param owner\n * @param gatekeeperNetwork\n * @param includeRevoked\n * @param offset\n * @param page\n */\nexport const findGatewayTokensForOwnerAndNetwork = async (\n  connection: Connection,\n  owner: PublicKey,\n  gatekeeperNetwork: PublicKey,\n  includeRevoked = false,\n  offset = 0,\n  page = 5, // by default, assume a user has max five GTs for a given network\n): Promise<GatewayToken[]> => {\n  const addresses = await Promise.all(\n    Array.from({ length: page }, (_, index) =>\n      getGatewayTokenAddressForOwnerAndGatekeeperNetwork(\n        owner,\n        gatekeeperNetwork,\n        index + offset,\n      ),\n    ),\n  );\n\n  const rawAccounts = await connection.getMultipleAccountsInfo(\n    addresses,\n    SOLANA_COMMITMENT,\n  );\n\n  return (\n    rawAccounts\n      // link the address to the account\n      .map((account, index): [AccountInfo<Buffer> | null, PublicKey] => [\n        account,\n        addresses[index],\n      ])\n      // filter out null accounts\n      .filter(\n        (tuple): tuple is [AccountInfo<Buffer>, PublicKey] => tuple[0] !== null,\n      )\n      // convert to GatewayToken\n      .map(([account, gatewayTokenAddress]) =>\n        dataToGatewayToken(\n          GatewayTokenData.fromAccount(account.data),\n          gatewayTokenAddress,\n        ),\n      )\n      // Filter out revoked GTs if requested\n      .filter((gt) => gt.state !== State.REVOKED || includeRevoked)\n      // sort by active status\n      .sort((a, b) => (a.isValid() === b.isValid() ? 0 : a.isValid() ? -1 : 1))\n  );\n};\n\n/**\n * Get a gateway token for the owner and network, if it exists.\n * @param connection A solana connection object\n * @param owner The token owner\n * @param gatekeeperNetwork The network to find a token for\n * @param includeRevoked If false (default), filter out revoked tokens\n * @returns Promise<GatewayToken | null> A gateway token, if one exists for the owner\n */\nexport const findGatewayToken = async (\n  connection: Connection,\n  owner: PublicKey,\n  gatekeeperNetwork: PublicKey,\n  includeRevoked = false,\n): Promise<GatewayToken | null> => {\n  const gatewayTokens = await findGatewayTokensForOwnerAndNetwork(\n    connection,\n    owner,\n    gatekeeperNetwork,\n    includeRevoked,\n  );\n\n  return gatewayTokens.length > 0 ? gatewayTokens[0] : null;\n};\n\n/**\n * Register a callback to be called whenever a gateway token changes state\n * @param connection A solana connection object\n * @param gatewayTokenAddress The address of the gateway token\n * @param callback The callback to register\n * @param commitment The solana commitment level at which to register gateway token changes. Defaults to 'confirmed'\n * @return The subscription id\n */\nexport const onGatewayTokenChange = (\n  connection: Connection,\n  gatewayTokenAddress: PublicKey,\n  callback: (gatewayToken: GatewayToken) => void,\n  commitment: Commitment = SOLANA_COMMITMENT,\n): number => {\n  const accountCallback = (accountInfo: AccountInfo<Buffer>) => {\n    const gatewayToken = dataToGatewayToken(\n      GatewayTokenData.fromAccount(accountInfo.data),\n      gatewayTokenAddress,\n    );\n    callback(gatewayToken);\n  };\n  return connection.onAccountChange(\n    gatewayTokenAddress,\n    accountCallback,\n    commitment,\n  );\n};\n\n/**\n * Register a callback to be called whenever a gateway token is created or changes state\n * @param connection A solana connection object\n * @param owner The gateway token owner\n * @param gatekeeperNetwork\n * @param callback The callback to register\n * @param commitment The solana commitment level at which to register gateway token changes. Defaults to 'confirmed'\n * @param seed\n * @return The subscription id\n */\nexport const onGatewayToken = (\n  connection: Connection,\n  owner: PublicKey,\n  gatekeeperNetwork: PublicKey,\n  callback: (gatewayToken: GatewayToken) => void,\n  commitment: Commitment = SOLANA_COMMITMENT,\n  seed = 0,\n): number => {\n  const gatewayTokenAddress =\n    getGatewayTokenAddressForOwnerAndGatekeeperNetwork(\n      owner,\n      gatekeeperNetwork,\n      seed,\n    );\n\n  return onGatewayTokenChange(\n    connection,\n    gatewayTokenAddress,\n    callback,\n    commitment,\n  );\n};\n\n/**\n * Lookup the gateway token at a given address\n * @param connection A solana connection object\n * @param gatewayTokenAddress The address of the gateway token\n */\nexport const getGatewayToken = async (\n  connection: Connection,\n  gatewayTokenAddress: PublicKey,\n): Promise<GatewayToken | null> => {\n  const account = await connection.getAccountInfo(\n    gatewayTokenAddress,\n    SOLANA_COMMITMENT,\n  );\n\n  if (!account) return null;\n\n  return dataToGatewayToken(\n    GatewayTokenData.fromAccount(account.data),\n    gatewayTokenAddress,\n  );\n};\n\n/**\n * Return true if an address feature exists.\n * @param connection\n * @param feature The feature to check\n * @param network The gatekeeper network\n */\nexport const featureExists = async (\n  connection: Connection,\n  feature: NetworkFeature,\n  network: PublicKey,\n): Promise<boolean> => {\n  const featureAccountAddress = getFeatureAccountAddress(feature, network);\n\n  const account = await connection.getAccountInfo(\n    featureAccountAddress,\n    SOLANA_COMMITMENT,\n  );\n\n  return account != null && PROGRAM_ID.equals(account.owner);\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dc9b9a0185f24b779b6b0dcb1b32ab71737da070","contentHash":"87bfb0d9f4b29e71632e98e051a56653a1d3d59021437a1c9969f7a812a0ebcd"},"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/types/index.ts":{"path":"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/types/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"2":{"start":{"line":4,"column":27},"end":{"line":4,"column":61}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":37}},"4":{"start":{"line":7,"column":0},"end":{"line":11,"column":42}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":31}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":33}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":31}},"8":{"start":{"line":16,"column":8},"end":{"line":16,"column":51}},"9":{"start":{"line":17,"column":8},"end":{"line":17,"column":51}},"10":{"start":{"line":18,"column":8},"end":{"line":18,"column":27}},"11":{"start":{"line":19,"column":8},"end":{"line":19,"column":27}},"12":{"start":{"line":20,"column":8},"end":{"line":20,"column":35}},"13":{"start":{"line":21,"column":8},"end":{"line":21,"column":35}},"14":{"start":{"line":22,"column":8},"end":{"line":22,"column":37}},"15":{"start":{"line":25,"column":8},"end":{"line":25,"column":65}},"16":{"start":{"line":28,"column":20},"end":{"line":28,"column":49}},"17":{"start":{"line":29,"column":8},"end":{"line":29,"column":58}},"18":{"start":{"line":32,"column":27},"end":{"line":32,"column":92}},"19":{"start":{"line":33,"column":8},"end":{"line":33,"column":63}},"20":{"start":{"line":36,"column":8},"end":{"line":36,"column":162}},"21":{"start":{"line":39,"column":0},"end":{"line":39,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":1},"end":{"line":7,"column":2}},"loc":{"start":{"line":7,"column":18},"end":{"line":11,"column":1}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":15,"column":90},"end":{"line":23,"column":5}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":14},"end":{"line":26,"column":5}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":17},"end":{"line":30,"column":5}},"line":27},"4":{"name":"(anonymous_4)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":41},"end":{"line":34,"column":5}},"line":31},"5":{"name":"(anonymous_5)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":35},"end":{"line":37,"column":5}},"line":35}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":3},"end":{"line":11,"column":40}},"type":"binary-expr","locations":[{"start":{"line":11,"column":3},"end":{"line":11,"column":8}},{"start":{"line":11,"column":13},"end":{"line":11,"column":39}}],"line":11},"1":{"loc":{"start":{"line":25,"column":15},"end":{"line":25,"column":64}},"type":"binary-expr","locations":[{"start":{"line":25,"column":15},"end":{"line":25,"column":42}},{"start":{"line":25,"column":46},"end":{"line":25,"column":64}}],"line":25},"2":{"loc":{"start":{"line":29,"column":15},"end":{"line":29,"column":57}},"type":"binary-expr","locations":[{"start":{"line":29,"column":15},"end":{"line":29,"column":32}},{"start":{"line":29,"column":36},"end":{"line":29,"column":57}}],"line":29},"3":{"loc":{"start":{"line":36,"column":131},"end":{"line":36,"column":160}},"type":"binary-expr","locations":[{"start":{"line":36,"column":131},"end":{"line":36,"column":141}},{"start":{"line":36,"column":145},"end":{"line":36,"column":160}}],"line":36}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":20,"9":20,"10":20,"11":20,"12":20,"13":20,"14":20,"15":6,"16":5,"17":5,"18":5,"19":5,"20":0,"21":1},"f":{"0":1,"1":20,"2":6,"3":5,"4":5,"5":0},"b":{"0":[1,1],"1":[6,5],"2":[5,3],"3":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/types/index.ts","sources":["/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/types/index.ts"],"names":[],"mappings":";;;AACA,8DAA2D;AAC3D,sCAAiD;AAMjD,IAAY,KAIX;AAJD,WAAY,KAAK;IACf,0BAAiB,CAAA;IACjB,4BAAmB,CAAA;IACnB,0BAAiB,CAAA;AACnB,CAAC,EAJW,KAAK,qBAAL,KAAK,QAIhB;AACD,MAAa,YAAY;IACvB;IACE,oDAAoD;IAC3C,iBAA4B,EAC5B,iBAA4B,EAC5B,KAAgB,EAChB,KAAY,EACZ,SAAoB,EACpB,SAAoB,EACpB,UAAmB;QANnB,sBAAiB,GAAjB,iBAAiB,CAAW;QAC5B,sBAAiB,GAAjB,iBAAiB,CAAW;QAC5B,UAAK,GAAL,KAAK,CAAW;QAChB,UAAK,GAAL,KAAK,CAAO;QACZ,cAAS,GAAT,SAAS,CAAW;QACpB,cAAS,GAAT,SAAS,CAAW;QACpB,eAAU,GAAV,UAAU,CAAS;IAC3B,CAAC;IAEJ,OAAO;QACL,OAAO,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;IAC3D,CAAC;IAEO,UAAU;QAChB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;QAC1C,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC;IACpD,CAAC;IAED,MAAM,CAAC,WAAW,CAChB,WAAgC,EAChC,GAAc;QAEd,MAAM,UAAU,GAAG,mCAAgB,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAClE,OAAO,IAAA,yBAAkB,EAAC,UAAU,EAAE,GAAG,CAAC,CAAC;IAC7C,CAAC;IAEM,MAAM,CAAC,EACZ,KAAK,EACL,UAAU,GAIX;QACC,OAAO,IAAI,YAAY,CACrB,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,KAAK,EACV,KAAK,EACL,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,SAAS,EACd,UAAU,IAAI,IAAI,CAAC,UAAU,CAC9B,CAAC;IACJ,CAAC;CACF;AA9CD,oCA8CC","sourcesContent":["import { AccountInfo, PublicKey } from \"@solana/web3.js\";\nimport { GatewayTokenData } from \"../lib/GatewayTokenData\";\nimport { dataToGatewayToken } from \"../lib/util\";\n\nexport declare type DeepPartial<T> = {\n  [P in keyof T]?: DeepPartial<T[P]>;\n};\n\nexport enum State {\n  ACTIVE = \"ACTIVE\",\n  REVOKED = \"REVOKED\",\n  FROZEN = \"FROZEN\",\n}\nexport class GatewayToken {\n  constructor(\n    //  the key used to reference the issuing gatekeeper\n    readonly issuingGatekeeper: PublicKey,\n    readonly gatekeeperNetwork: PublicKey,\n    readonly owner: PublicKey,\n    readonly state: State,\n    readonly publicKey: PublicKey,\n    readonly programId: PublicKey,\n    readonly expiryTime?: number,\n  ) {}\n\n  isValid(): boolean {\n    return this.state === State.ACTIVE && !this.hasExpired();\n  }\n\n  private hasExpired(): boolean {\n    const now = Math.floor(Date.now() / 1000);\n    return !!this.expiryTime && now > this.expiryTime;\n  }\n\n  static fromAccount(\n    accountInfo: AccountInfo<Buffer>,\n    key: PublicKey,\n  ): GatewayToken {\n    const parsedData = GatewayTokenData.fromAccount(accountInfo.data);\n    return dataToGatewayToken(parsedData, key);\n  }\n\n  public update({\n    state,\n    expiryTime,\n  }: {\n    state: State;\n    expiryTime?: number;\n  }): GatewayToken {\n    return new GatewayToken(\n      this.issuingGatekeeper,\n      this.gatekeeperNetwork,\n      this.owner,\n      state,\n      this.publicKey,\n      this.programId,\n      expiryTime || this.expiryTime,\n    );\n  }\n}\n\nexport type ProgramAccountResponse = {\n  pubkey: PublicKey;\n  account: AccountInfo<Buffer>;\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6d11f09680ec3b64fbd3b433476e8fdc7ce0f31b","contentHash":"b079cf796bf38d59f55adc03ef01c974a58015193423893ffd563442575dda21"},"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/GatewayTokenData.ts":{"path":"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/GatewayTokenData.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":114}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":22},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":30},"end":{"line":6,"column":62}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":52}},"6":{"start":{"line":22,"column":8},"end":{"line":22,"column":159}},"7":{"start":{"line":25,"column":8},"end":{"line":27,"column":11}},"8":{"start":{"line":30,"column":0},"end":{"line":30,"column":44}},"9":{"start":{"line":33,"column":0},"end":{"line":33,"column":24}},"10":{"start":{"line":36,"column":0},"end":{"line":36,"column":24}},"11":{"start":{"line":39,"column":0},"end":{"line":39,"column":26}},"12":{"start":{"line":42,"column":0},"end":{"line":42,"column":46}},"13":{"start":{"line":43,"column":0},"end":{"line":55,"column":3}},"14":{"start":{"line":56,"column":0},"end":{"line":64,"column":3}},"15":{"start":{"line":65,"column":0},"end":{"line":65,"column":65}},"16":{"start":{"line":66,"column":0},"end":{"line":66,"column":65}},"17":{"start":{"line":67,"column":0},"end":{"line":67,"column":66}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":36},"end":{"line":20,"column":5}},"line":18},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":28},"end":{"line":23,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":24},"end":{"line":28,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":75},"end":{"line":26,"column":122}},"type":"binary-expr","locations":[{"start":{"line":26,"column":75},"end":{"line":26,"column":80}},{"start":{"line":26,"column":84},"end":{"line":26,"column":122}}],"line":26}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":20,"6":0,"7":0,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1},"f":{"0":20,"1":0,"2":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/GatewayTokenData.ts","sources":["/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/GatewayTokenData.ts"],"names":[],"mappings":";;;AAAA,6CAAqD;AACrD,+CAAyD;AACzD,+DAA4D;AAG5D;;;;;;;;;GASG;AACH,MAAa,gBAAiB,SAAQ,wBAAU;IAO9C,MAAM,CAAC,WAAW,CAAC,WAAmB;QACpC,OAAO,gBAAgB,CAAC,MAAM,CAAmB,WAAW,CAAC,CAAC;IAChE,CAAC;IAED,YAAY,CAAC,SAAoB;QAC/B,OAAO,IAAI,gBAAgB,iCACtB,IAAI,KACP,SAAS,EAAE,yCAAmB,CAAC,aAAa,CAAC,SAAS,CAAC,IACvD,CAAC;IACL,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,KAAiB;QAC5B,OAAO,IAAI,gBAAgB,CAAC;YAC1B,KAAK,EAAE,yCAAmB,CAAC,aAAa,CACtC,KAAK,IAAI,iBAAO,CAAC,QAAQ,EAAE,CAAC,SAAS,CACtC;SACF,CAAC,CAAC;IACL,CAAC;CACF;AAzBD,4CAyBC;AAED,MAAa,MAAO,SAAQ,wBAAU;CAAG;AAAzC,wBAAyC;AACzC,MAAa,MAAO,SAAQ,wBAAU;CAAG;AAAzC,wBAAyC;AACzC,MAAa,OAAQ,SAAQ,wBAAU;CAAG;AAA1C,0BAA0C;AAC1C,MAAa,iBAAkB,SAAQ,kBAAI;CAI1C;AAJD,8CAIC;AAED,oBAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE;IAC3B,IAAI,EAAE,QAAQ;IACd,MAAM,EAAE;QACN,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC,oBAAoB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,yCAAmB,EAAE,CAAC;QACrE,CAAC,OAAO,EAAE,yCAAmB,CAAC;QAC9B,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,yCAAmB,EAAE,CAAC;QAChE,CAAC,mBAAmB,EAAE,yCAAmB,CAAC;QAC1C,CAAC,mBAAmB,EAAE,yCAAmB,CAAC;QAC1C,CAAC,OAAO,EAAE,iBAAiB,CAAC;QAC5B,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;KAC5C;CACF,CAAC,CAAC;AACH,oBAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE;IAC5B,IAAI,EAAE,MAAM;IACZ,KAAK,EAAE,MAAM;IACb,MAAM,EAAE;QACN,CAAC,QAAQ,EAAE,MAAM,CAAC;QAClB,CAAC,QAAQ,EAAE,MAAM,CAAC;QAClB,CAAC,SAAS,EAAE,OAAO,CAAC;KACrB;CACF,CAAC,CAAC;AACH,oBAAM,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;AACnD,oBAAM,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;AACnD,oBAAM,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC","sourcesContent":["import { Keypair, PublicKey } from \"@solana/web3.js\";\nimport { Assignable, Enum, SCHEMA } from \"./solanaBorsh\";\nimport { AssignablePublicKey } from \"./AssignablePublicKey\";\nimport BN from \"bn.js\";\n\n/**\n * The on-chain structure of a gateway token.\n * Matches: solana/integration-lib/src/state.rs\n *\n * The pattern for these objects is to have their properties dynamically\n * assigned by borsh.decode, as opposed to via a constructor.\n *\n * The imperative assignment operator (!) is used to avoid Typescript\n * complaining about the above.\n */\nexport class GatewayTokenData extends Assignable {\n  owner!: AssignablePublicKey;\n  issuingGatekeeper!: AssignablePublicKey;\n  gatekeeperNetwork!: AssignablePublicKey;\n  state!: GatewayTokenState;\n  expiry?: BN; // u64 mapped as a hex string by Borsh\n\n  static fromAccount(accountData: Buffer): GatewayTokenData {\n    return GatewayTokenData.decode<GatewayTokenData>(accountData);\n  }\n\n  forAuthority(authority: PublicKey) {\n    return new GatewayTokenData({\n      ...this,\n      authority: AssignablePublicKey.fromPublicKey(authority),\n    });\n  }\n\n  static empty(owner?: PublicKey): GatewayTokenData {\n    return new GatewayTokenData({\n      owner: AssignablePublicKey.fromPublicKey(\n        owner || Keypair.generate().publicKey,\n      ),\n    });\n  }\n}\n\nexport class Active extends Assignable {}\nexport class Frozen extends Assignable {}\nexport class Revoked extends Assignable {}\nexport class GatewayTokenState extends Enum {\n  active?: Active;\n  frozen?: Frozen;\n  revoked?: Revoked;\n}\n\nSCHEMA.set(GatewayTokenData, {\n  kind: \"struct\",\n  fields: [\n    [\"version\", [1]],\n    [\"parentGatewayToken\", { kind: \"option\", type: AssignablePublicKey }],\n    [\"owner\", AssignablePublicKey],\n    [\"ownerIdentity\", { kind: \"option\", type: AssignablePublicKey }],\n    [\"gatekeeperNetwork\", AssignablePublicKey],\n    [\"issuingGatekeeper\", AssignablePublicKey],\n    [\"state\", GatewayTokenState],\n    [\"expiry\", { kind: \"option\", type: \"u64\" }],\n  ],\n});\nSCHEMA.set(GatewayTokenState, {\n  kind: \"enum\",\n  field: \"enum\",\n  values: [\n    [\"active\", Active],\n    [\"frozen\", Frozen],\n    [\"revoked\", Revoked],\n  ],\n});\nSCHEMA.set(Active, { kind: \"struct\", fields: [] });\nSCHEMA.set(Frozen, { kind: \"struct\", fields: [] });\nSCHEMA.set(Revoked, { kind: \"struct\", fields: [] });\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6192433eddf1cbdfbfa37d7a7c26ee5d33bf7cfa","contentHash":"c239880895dc752e5f531549481143ff951ab0eadcca79ce484ad7d42fe97a10"},"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/solanaBorsh.ts":{"path":"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/solanaBorsh.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":60}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"4":{"start":{"line":10,"column":8},"end":{"line":17,"column":11}},"5":{"start":{"line":16,"column":12},"end":{"line":16,"column":40}},"6":{"start":{"line":20,"column":8},"end":{"line":20,"column":73}},"7":{"start":{"line":25,"column":8},"end":{"line":25,"column":77}},"8":{"start":{"line":28,"column":0},"end":{"line":28,"column":32}},"9":{"start":{"line":34,"column":8},"end":{"line":34,"column":26}},"10":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"11":{"start":{"line":36,"column":12},"end":{"line":36,"column":63}},"12":{"start":{"line":38,"column":8},"end":{"line":38,"column":23}},"13":{"start":{"line":39,"column":8},"end":{"line":41,"column":11}},"14":{"start":{"line":40,"column":12},"end":{"line":40,"column":28}},"15":{"start":{"line":44,"column":0},"end":{"line":44,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":28},"end":{"line":18,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":40},"end":{"line":10,"column":41}},"loc":{"start":{"line":10,"column":49},"end":{"line":17,"column":9}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":13},"end":{"line":21,"column":5}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":24},"end":{"line":26,"column":5}},"line":22},"4":{"name":"(anonymous_4)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":28},"end":{"line":42,"column":5}},"line":33},"5":{"name":"(anonymous_5)","decl":{"start":{"line":39,"column":40},"end":{"line":39,"column":41}},"loc":{"start":{"line":39,"column":49},"end":{"line":41,"column":9}},"line":39}},"branchMap":{"0":{"loc":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},{"start":{"line":35,"column":8},"end":{"line":37,"column":9}}],"line":35}},"s":{"0":1,"1":1,"2":1,"3":1,"4":222,"5":424,"6":19,"7":20,"8":1,"9":41,"10":41,"11":0,"12":41,"13":41,"14":41,"15":1},"f":{"0":222,"1":424,"2":19,"3":20,"4":41,"5":41},"b":{"0":[0,41]},"inputSourceMap":{"version":3,"file":"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/solanaBorsh.ts","sources":["/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/solanaBorsh.ts"],"names":[],"mappings":";;;AAAA,iCAAgE;AAEnD,QAAA,MAAM,GAAW,IAAI,GAAG,EAAE,CAAC;AAExC,gCAAgC;AAChC,MAAsB,UAAU;IAC9B,8DAA8D;IAC9D,YAAY,UAAkC;QAC5C,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,GAAW,EAAE,EAAE;YAC9C,2CAA2C;YAC3C,qEAAqE;YACrE,sFAAsF;YACtF,mEAAmE;YACnE,8DAA8D;YAC9D,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,OAAO,MAAM,CAAC,IAAI,CAAC,IAAA,iBAAS,EAAC,cAAM,EAAE,IAAI,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,MAAM,CAAC,MAAM,CAAuB,IAAY;QAC9C,2DAA2D;QAC3D,gEAAgE;QAChE,OAAO,IAAA,4BAAoB,EAAC,cAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;CACF;AAtBD,gCAsBC;AAED,6EAA6E;AAC7E,qBAAqB;AACrB,MAAsB,IAAK,SAAQ,UAAU;IAG3C,8DAA8D;IAC9D,YAAY,UAAe;QACzB,KAAK,CAAC,UAAU,CAAC,CAAC;QAClB,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACzC,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;QACrD,CAAC;QACD,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACtC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAdD,oBAcC","sourcesContent":["import { Schema, serialize, deserializeUnchecked } from \"borsh\";\n\nexport const SCHEMA: Schema = new Map();\n\n// Class wrapping a plain object\nexport abstract class Assignable {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(properties: { [key: string]: any }) {\n    Object.keys(properties).forEach((key: string) => {\n      // this is probably possible in Typescript,\n      // but requires (keyof this) which is not possible in the constructor\n      // WARNING: This functionality actually changes depending on which ts compiler you use\n      // it works with tsc, not with bun. To be safe we should change it.\n      // @ts-expect-error - therefore we need to disable this error.\n      this[key] = properties[key];\n    });\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SCHEMA, this));\n  }\n\n  static decode<T extends Assignable>(data: Buffer): T {\n    // use deserializeUnchecked here as opposed to deserialize,\n    // as the latter throws an error if the data has trailing bytes.\n    return deserializeUnchecked(SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport abstract class Enum extends Assignable {\n  enum: string;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error(\"Enum can only take single value\");\n    }\n    this.enum = \"\";\n    Object.keys(properties).forEach((key) => {\n      this.enum = key;\n    });\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"baa4e5da5e94a2e98c890233dd680f2ce54425eb","contentHash":"25c9445c3b552139574073e92d41361a1e3a15d715cbed1edeb27db21624ac5c"},"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/AssignablePublicKey.ts":{"path":"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/AssignablePublicKey.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":46}},"3":{"start":{"line":5,"column":18},"end":{"line":5,"column":44}},"4":{"start":{"line":17,"column":8},"end":{"line":17,"column":51}},"5":{"start":{"line":20,"column":8},"end":{"line":20,"column":45}},"6":{"start":{"line":23,"column":8},"end":{"line":23,"column":82}},"7":{"start":{"line":26,"column":8},"end":{"line":28,"column":11}},"8":{"start":{"line":31,"column":22},"end":{"line":31,"column":35}},"9":{"start":{"line":32,"column":8},"end":{"line":32,"column":22}},"10":{"start":{"line":33,"column":8},"end":{"line":33,"column":50}},"11":{"start":{"line":36,"column":0},"end":{"line":36,"column":50}},"12":{"start":{"line":37,"column":0},"end":{"line":40,"column":3}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":18},"end":{"line":18,"column":5}},"line":16},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":15},"end":{"line":21,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":25},"end":{"line":24,"column":5}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":36},"end":{"line":29,"column":5}},"line":25},"4":{"name":"(anonymous_4)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":19},"end":{"line":34,"column":5}},"line":30}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":60,"5":0,"6":0,"7":45,"8":0,"9":0,"10":0,"11":1,"12":1},"f":{"0":60,"1":0,"2":0,"3":45,"4":0},"b":{},"inputSourceMap":{"version":3,"file":"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/AssignablePublicKey.ts","sources":["/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/AssignablePublicKey.ts"],"names":[],"mappings":";;;AAAA,+CAAmD;AACnD,6CAA4C;AAE5C;;;;;;;;GAQG;AACH,MAAa,mBAAoB,SAAQ,wBAAU;IAIjD,WAAW;QACT,OAAO,IAAI,mBAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,CAAC;IACvC,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,MAAc;QACzB,OAAO,mBAAmB,CAAC,aAAa,CAAC,IAAI,mBAAS,CAAC,MAAM,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,MAAM,CAAC,aAAa,CAAC,SAAoB;QACvC,OAAO,IAAI,mBAAmB,CAAC;YAC7B,KAAK,EAAE,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;SAC7C,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,KAAK;QACV,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC;QAC5B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACd,OAAO,IAAI,mBAAmB,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IAC5C,CAAC;CACF;AA3BD,kDA2BC;AAED,oBAAM,CAAC,GAAG,CAAC,mBAAmB,EAAE;IAC9B,IAAI,EAAE,QAAQ;IACd,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;CAC1B,CAAC,CAAC","sourcesContent":["import { Assignable, SCHEMA } from \"./solanaBorsh\";\nimport { PublicKey } from \"@solana/web3.js\";\n\n/**\n * A Borsh-compatible public key object\n *\n * The pattern for these objects is to have their properties dynamically\n * assigned by borsh.decode, as opposed to via a constructor.\n *\n * The imperative assignment operator (!) is used to avoid Typescript\n * complaining about the above.\n */\nexport class AssignablePublicKey extends Assignable {\n  // The public key bytes\n  bytes!: number[];\n\n  toPublicKey(): PublicKey {\n    return new PublicKey(this.bytes);\n  }\n\n  toString(): string {\n    return this.toPublicKey().toBase58();\n  }\n\n  static parse(pubkey: string): AssignablePublicKey {\n    return AssignablePublicKey.fromPublicKey(new PublicKey(pubkey));\n  }\n\n  static fromPublicKey(publicKey: PublicKey): AssignablePublicKey {\n    return new AssignablePublicKey({\n      bytes: Uint8Array.from(publicKey.toBuffer()),\n    });\n  }\n\n  static empty(): AssignablePublicKey {\n    const bytes = new Array(32);\n    bytes.fill(0);\n    return new AssignablePublicKey({ bytes });\n  }\n}\n\nSCHEMA.set(AssignablePublicKey, {\n  kind: \"struct\",\n  fields: [[\"bytes\", [32]]],\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a1e53b7d6d05a2f5deb9cdf0bd2f9fd5f9fb6fe3","contentHash":"cb0cbc5eb40982315885573133f0dc59e145420e32ee98846f0684c079a9c9c9"},"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/util.ts":{"path":"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/util.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":372}},"14":{"start":{"line":13,"column":18},"end":{"line":13,"column":44}},"15":{"start":{"line":14,"column":20},"end":{"line":14,"column":42}},"16":{"start":{"line":15,"column":16},"end":{"line":15,"column":35}},"17":{"start":{"line":16,"column":29},"end":{"line":16,"column":60}},"18":{"start":{"line":22,"column":36},"end":{"line":26,"column":29}},"19":{"start":{"line":22,"column":60},"end":{"line":26,"column":29}},"20":{"start":{"line":27,"column":0},"end":{"line":27,"column":66}},"21":{"start":{"line":34,"column":59},"end":{"line":53,"column":1}},"22":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"23":{"start":{"line":37,"column":8},"end":{"line":37,"column":121}},"24":{"start":{"line":39,"column":17},"end":{"line":39,"column":48}},"25":{"start":{"line":40,"column":23},"end":{"line":40,"column":78}},"26":{"start":{"line":41,"column":4},"end":{"line":45,"column":5}},"27":{"start":{"line":42,"column":8},"end":{"line":44,"column":94}},"28":{"start":{"line":46,"column":18},"end":{"line":51,"column":5}},"29":{"start":{"line":52,"column":4},"end":{"line":52,"column":88}},"30":{"start":{"line":54,"column":0},"end":{"line":54,"column":112}},"31":{"start":{"line":59,"column":0},"end":{"line":59,"column":53}},"32":{"start":{"line":61,"column":0},"end":{"line":61,"column":67}},"33":{"start":{"line":63,"column":4},"end":{"line":64,"column":36}},"34":{"start":{"line":64,"column":8},"end":{"line":64,"column":36}},"35":{"start":{"line":65,"column":4},"end":{"line":66,"column":37}},"36":{"start":{"line":66,"column":8},"end":{"line":66,"column":37}},"37":{"start":{"line":67,"column":4},"end":{"line":68,"column":36}},"38":{"start":{"line":68,"column":8},"end":{"line":68,"column":36}},"39":{"start":{"line":69,"column":4},"end":{"line":69,"column":67}},"40":{"start":{"line":71,"column":27},"end":{"line":74,"column":1}},"41":{"start":{"line":73,"column":4},"end":{"line":73,"column":279}},"42":{"start":{"line":75,"column":0},"end":{"line":75,"column":48}},"43":{"start":{"line":81,"column":36},"end":{"line":81,"column":98}},"44":{"start":{"line":81,"column":56},"end":{"line":81,"column":98}},"45":{"start":{"line":82,"column":0},"end":{"line":82,"column":66}},"46":{"start":{"line":89,"column":25},"end":{"line":93,"column":2}},"47":{"start":{"line":89,"column":81},"end":{"line":93,"column":2}},"48":{"start":{"line":90,"column":30},"end":{"line":90,"column":110}},"49":{"start":{"line":91,"column":20},"end":{"line":91,"column":101}},"50":{"start":{"line":92,"column":4},"end":{"line":92,"column":75}},"51":{"start":{"line":94,"column":0},"end":{"line":94,"column":44}},"52":{"start":{"line":100,"column":20},"end":{"line":114,"column":1}},"53":{"start":{"line":101,"column":23},"end":{"line":106,"column":5}},"54":{"start":{"line":102,"column":8},"end":{"line":103,"column":23}},"55":{"start":{"line":103,"column":12},"end":{"line":103,"column":23}},"56":{"start":{"line":104,"column":8},"end":{"line":104,"column":31}},"57":{"start":{"line":105,"column":8},"end":{"line":105,"column":54}},"58":{"start":{"line":107,"column":4},"end":{"line":108,"column":68}},"59":{"start":{"line":108,"column":8},"end":{"line":108,"column":68}},"60":{"start":{"line":109,"column":4},"end":{"line":110,"column":56}},"61":{"start":{"line":110,"column":8},"end":{"line":110,"column":56}},"62":{"start":{"line":111,"column":4},"end":{"line":112,"column":32}},"63":{"start":{"line":112,"column":8},"end":{"line":112,"column":32}},"64":{"start":{"line":113,"column":4},"end":{"line":113,"column":44}},"65":{"start":{"line":115,"column":0},"end":{"line":115,"column":34}},"66":{"start":{"line":121,"column":33},"end":{"line":124,"column":1}},"67":{"start":{"line":122,"column":24},"end":{"line":122,"column":84}},"68":{"start":{"line":123,"column":4},"end":{"line":123,"column":136}},"69":{"start":{"line":125,"column":0},"end":{"line":125,"column":60}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":22,"column":36},"end":{"line":22,"column":37}},"loc":{"start":{"line":22,"column":60},"end":{"line":26,"column":29}},"line":22},"8":{"name":"(anonymous_8)","decl":{"start":{"line":34,"column":59},"end":{"line":34,"column":60}},"loc":{"start":{"line":34,"column":100},"end":{"line":53,"column":1}},"line":34},"9":{"name":"fromGatewayTokenState","decl":{"start":{"line":62,"column":9},"end":{"line":62,"column":30}},"loc":{"start":{"line":62,"column":38},"end":{"line":70,"column":1}},"line":62},"10":{"name":"(anonymous_10)","decl":{"start":{"line":71,"column":27},"end":{"line":71,"column":28}},"loc":{"start":{"line":71,"column":48},"end":{"line":74,"column":1}},"line":71},"11":{"name":"(anonymous_11)","decl":{"start":{"line":81,"column":36},"end":{"line":81,"column":37}},"loc":{"start":{"line":81,"column":56},"end":{"line":81,"column":98}},"line":81},"12":{"name":"(anonymous_12)","decl":{"start":{"line":89,"column":25},"end":{"line":89,"column":26}},"loc":{"start":{"line":89,"column":81},"end":{"line":93,"column":2}},"line":89},"13":{"name":"(anonymous_13)","decl":{"start":{"line":89,"column":115},"end":{"line":89,"column":116}},"loc":{"start":{"line":89,"column":128},"end":{"line":93,"column":1}},"line":89},"14":{"name":"(anonymous_14)","decl":{"start":{"line":100,"column":20},"end":{"line":100,"column":21}},"loc":{"start":{"line":100,"column":29},"end":{"line":114,"column":1}},"line":100},"15":{"name":"(anonymous_15)","decl":{"start":{"line":101,"column":23},"end":{"line":101,"column":24}},"loc":{"start":{"line":101,"column":37},"end":{"line":106,"column":5}},"line":101},"16":{"name":"(anonymous_16)","decl":{"start":{"line":121,"column":33},"end":{"line":121,"column":34}},"loc":{"start":{"line":121,"column":55},"end":{"line":124,"column":1}},"line":121}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":34,"column":86},"end":{"line":34,"column":95}},"type":"default-arg","locations":[{"start":{"line":34,"column":94},"end":{"line":34,"column":95}}],"line":34},"6":{"loc":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},{"start":{"line":36,"column":4},"end":{"line":38,"column":5}}],"line":36},"7":{"loc":{"start":{"line":41,"column":4},"end":{"line":45,"column":5}},"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":45,"column":5}},{"start":{"line":41,"column":4},"end":{"line":45,"column":5}}],"line":41},"8":{"loc":{"start":{"line":63,"column":4},"end":{"line":64,"column":36}},"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":64,"column":36}},{"start":{"line":63,"column":4},"end":{"line":64,"column":36}}],"line":63},"9":{"loc":{"start":{"line":65,"column":4},"end":{"line":66,"column":37}},"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":66,"column":37}},{"start":{"line":65,"column":4},"end":{"line":66,"column":37}}],"line":65},"10":{"loc":{"start":{"line":67,"column":4},"end":{"line":68,"column":36}},"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":68,"column":36}},{"start":{"line":67,"column":4},"end":{"line":68,"column":36}}],"line":67},"11":{"loc":{"start":{"line":73,"column":208},"end":{"line":73,"column":277}},"type":"cond-expr","locations":[{"start":{"line":73,"column":255},"end":{"line":73,"column":261}},{"start":{"line":73,"column":264},"end":{"line":73,"column":277}}],"line":73},"12":{"loc":{"start":{"line":73,"column":208},"end":{"line":73,"column":252}},"type":"binary-expr","locations":[{"start":{"line":73,"column":208},"end":{"line":73,"column":235}},{"start":{"line":73,"column":239},"end":{"line":73,"column":252}}],"line":73},"13":{"loc":{"start":{"line":92,"column":11},"end":{"line":92,"column":74}},"type":"binary-expr","locations":[{"start":{"line":92,"column":11},"end":{"line":92,"column":26}},{"start":{"line":92,"column":30},"end":{"line":92,"column":74}}],"line":92},"14":{"loc":{"start":{"line":102,"column":8},"end":{"line":103,"column":23}},"type":"if","locations":[{"start":{"line":102,"column":8},"end":{"line":103,"column":23}},{"start":{"line":102,"column":8},"end":{"line":103,"column":23}}],"line":102},"15":{"loc":{"start":{"line":107,"column":4},"end":{"line":108,"column":68}},"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":108,"column":68}},{"start":{"line":107,"column":4},"end":{"line":108,"column":68}}],"line":107},"16":{"loc":{"start":{"line":109,"column":4},"end":{"line":110,"column":56}},"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":110,"column":56}},{"start":{"line":109,"column":4},"end":{"line":110,"column":56}}],"line":109},"17":{"loc":{"start":{"line":111,"column":4},"end":{"line":112,"column":32}},"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":112,"column":32}},{"start":{"line":111,"column":4},"end":{"line":112,"column":32}}],"line":111}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":3,"20":1,"21":1,"22":1054,"23":1,"24":1053,"25":1053,"26":1053,"27":0,"28":1053,"29":1053,"30":1,"31":1,"32":1,"33":20,"34":13,"35":7,"36":7,"37":0,"38":0,"39":0,"40":1,"41":20,"42":1,"43":1,"44":1,"45":1,"46":1,"47":0,"48":0,"49":0,"50":0,"51":1,"52":1,"53":1053,"54":2066,"55":1033,"56":1033,"57":1033,"58":1053,"59":0,"60":1053,"61":0,"62":1053,"63":20,"64":1033,"65":1,"66":1,"67":1,"68":1,"69":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":3,"8":1054,"9":20,"10":20,"11":1,"12":0,"13":0,"14":1053,"15":2066,"16":1},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[2],"6":[1,1053],"7":[0,1053],"8":[13,7],"9":[7,0],"10":[0,0],"11":[16,4],"12":[20,20],"13":[0,0],"14":[1033,1033],"15":[0,1053],"16":[0,1053],"17":[20,1033]},"inputSourceMap":{"version":3,"file":"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/util.ts","sources":["/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/util.ts"],"names":[],"mappings":"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","sourcesContent":["import { Connection, PublicKey } from \"@solana/web3.js\";\nimport {\n  GATEKEEPER_NONCE_SEED_STRING,\n  GATEWAY_TOKEN_ADDRESS_SEED,\n  PROGRAM_ID,\n  SOLANA_COMMITMENT,\n} from \"./constants\";\nimport { GatewayToken, State } from \"../types\";\nimport { GatewayTokenData, GatewayTokenState } from \"./GatewayTokenData\";\nimport { mapEnumToFeatureName, NetworkFeature } from \"./GatewayNetworkData\";\n\n/**\n * Derive the address of the gatekeeper PDA for this gatekeeper\n * @param authority The gatekeeper\n * @param network The network\n */\nexport const getGatekeeperAccountAddress = (\n  authority: PublicKey,\n  network: PublicKey,\n): PublicKey =>\n  PublicKey.findProgramAddressSync(\n    [\n      authority.toBuffer(),\n      network.toBuffer(),\n      Buffer.from(GATEKEEPER_NONCE_SEED_STRING, \"utf8\"),\n    ],\n    PROGRAM_ID,\n  )[0];\n\n/**\n * Derive the address of the gateway token PDA for this owner address and optional seed.\n * @param owner The owner of the gateway token\n * @param gatekeeperNetwork The network of the gateway token\n * @param index The index of the gateway token (default 0)\n */\nexport const getGatewayTokenAddressForOwnerAndGatekeeperNetwork = (\n  owner: PublicKey,\n  gatekeeperNetwork: PublicKey,\n  index = 0,\n): PublicKey => {\n  // The index is converted to an 8-byte uint array. Ensure no overflow here.\n  if (index > 2 ** (8 * 8)) {\n    throw new Error(\n      \"index must be < max(8 bytes) when calling getGatewayTokenAddressForOwnerAndGatekeeperNetwork.\",\n    );\n  }\n\n  const seed = numToBuffer(index);\n  const paddedSeed = Buffer.concat([Buffer.alloc(8 - seed.length, 0), seed]);\n\n  if (paddedSeed.length > 8) {\n    throw new Error(\n      \"Seed has length \" +\n        paddedSeed.length +\n        \" instead of 8 when calling getGatewayTokenAddressForOwnerAndGatekeeperNetwork.\",\n    );\n  }\n  const seeds = [\n    owner.toBuffer(),\n    Buffer.from(GATEWAY_TOKEN_ADDRESS_SEED, \"utf8\"),\n    paddedSeed,\n    gatekeeperNetwork.toBuffer(),\n  ];\n\n  return PublicKey.findProgramAddressSync(seeds, PROGRAM_ID)[0];\n};\n\n// Based on solana/integration-lib/src/state.rs\n// If the optional the parent-gateway-token field is populated, this value will be\n// 34 (2 + 32) instead. TODO IDCOM-320 restructure the gateway token accounts to put\n// all optional values at the end of the struct to simplify account parsing a little\nexport const GATEWAY_TOKEN_ACCOUNT_OWNER_FIELD_OFFSET = 2;\n\n// As above, if optional fields are present, this will differ. TODO IDCOM-320 fixes this\nexport const GATEWAY_TOKEN_ACCOUNT_GATEKEEPER_NETWORK_FIELD_OFFSET = 35;\n\nfunction fromGatewayTokenState(state: GatewayTokenState): State {\n  if (state.active) return State.ACTIVE;\n  if (state.revoked) return State.REVOKED;\n  if (state.frozen) return State.FROZEN;\n\n  throw new Error(\"Unrecognised state \" + JSON.stringify(state));\n}\n\nexport const dataToGatewayToken = (\n  data: GatewayTokenData,\n  publicKey: PublicKey,\n): GatewayToken =>\n  new GatewayToken(\n    data.issuingGatekeeper.toPublicKey(),\n    data.gatekeeperNetwork.toPublicKey(),\n    data.owner.toPublicKey(),\n    fromGatewayTokenState(data.state),\n    publicKey,\n    PROGRAM_ID,\n    data.expiry?.toNumber(),\n  );\n\n/**\n * Stops listening to gateway state changes\n * @param connection A solana connection object\n * @param id The subscription id to deregister\n */\nexport const removeAccountChangeListener = (\n  connection: Connection,\n  id: number,\n): Promise<void> => connection.removeAccountChangeListener(id);\n\n/**\n * Returns whether or not a gatekeeper exists from a network and authority\n * @param connection A solana connection\n * @param gatekeeperAuthority The authority of the gatekeeper\n * @param gatekeeperNetwork The network of the gatekeeper\n */\nexport const gatekeeperExists = async (\n  connection: Connection,\n  gatekeeperAuthority: PublicKey,\n  gatekeeperNetwork: PublicKey,\n): Promise<boolean> => {\n  const gatekeeperAccount = getGatekeeperAccountAddress(\n    gatekeeperAuthority,\n    gatekeeperNetwork,\n  );\n  const account = await connection.getAccountInfo(\n    gatekeeperAccount,\n    SOLANA_COMMITMENT,\n  );\n\n  return account != null && PROGRAM_ID.equals(account.owner);\n};\n\n/**\n * Converts a number to a buffer of U8 integers, for use in the gateway token address\n * derivation as the seed value.\n * @param num\n */\nexport const numToBuffer = (num: number): Buffer => {\n  const numToArray = (num: number, arr: number[]): number[] => {\n    if (num === 0) return arr;\n    arr.unshift(num % 256);\n    return numToArray(Math.floor(num / 256), arr);\n  };\n\n  if (num < 0) throw new Error(\"Cannot convert negative number to buffer\");\n  if (Number.isNaN(num)) throw new Error(\"Cannot convert NaN to buffer\");\n\n  if (num === 0) return Buffer.from([0]);\n\n  return Buffer.from(numToArray(num, []));\n};\n\n/**\n * Derive the address of the feature PDA\n * @param feature The feature to set.\n * @param network The network\n */\nexport const getFeatureAccountAddress = (\n  feature: NetworkFeature,\n  network: PublicKey,\n): PublicKey => {\n  const featureName = mapEnumToFeatureName(feature.enum);\n\n  return PublicKey.findProgramAddressSync(\n    [network.toBytes(), Buffer.from(featureName, \"utf8\")],\n    PROGRAM_ID,\n  )[0];\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fefbb0b575dfd128c1e23bee3f6db5c02e4a3b06","contentHash":"d7741be843a227084e69c7a7a94c266539a3cd21a63880ba38423e896ea5ca09"},"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/constants.ts":{"path":"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/constants.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":304}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":44}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":92}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":52}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":47}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":35}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":40}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":40}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":41}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":72}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/constants.ts","sources":["/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/constants.ts"],"names":[],"mappings":";;;AAAA,6CAAwD;AAExD,4DAA4D;AAC/C,QAAA,UAAU,GAAc,IAAI,mBAAS,CAChD,6CAA6C,CAC9C,CAAC;AACW,QAAA,4BAA4B,GAAG,YAAY,CAAC,CAAC,qDAAqD;AAClG,QAAA,0BAA0B,GAAG,SAAS,CAAC,CAAC,qDAAqD;AAE7F,QAAA,iBAAiB,GAAe,WAAW,CAAC;AAC5C,QAAA,sBAAsB,GAAW,CAAC,CAAC;AAChD,6CAA6C;AAChC,QAAA,wBAAwB,GAAG,IAAI,CAAC;AAChC,QAAA,wBAAwB,GAAG,IAAI,CAAC;AAChC,QAAA,wBAAwB,GAAG,KAAK,CAAC;AACjC,QAAA,uBAAuB,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC","sourcesContent":["import { Commitment, PublicKey } from \"@solana/web3.js\";\n\n// Should equal the contents of solana/program/program-id.md\nexport const PROGRAM_ID: PublicKey = new PublicKey(\n  \"gatem74V238djXdzWnJf94Wo1DcnuGkfijbf3AuBhfs\",\n);\nexport const GATEKEEPER_NONCE_SEED_STRING = \"gatekeeper\"; // must match get_inbox_address_with_seed in state.rs\nexport const GATEWAY_TOKEN_ADDRESS_SEED = \"gateway\"; // must match get_inbox_address_with_seed in state.rs\n\nexport const SOLANA_COMMITMENT: Commitment = \"confirmed\";\nexport const DEFAULT_SOLANA_RETRIES: number = 3;\n// Timeouts vary depending on the commitment.\nexport const SOLANA_TIMEOUT_PROCESSED = 3000;\nexport const SOLANA_TIMEOUT_CONFIRMED = 7000;\nexport const SOLANA_TIMEOUT_FINALIZED = 10000;\nexport const DEFAULT_DERIVATION_SEED = Buffer.from([0, 0, 0, 0, 0, 0, 0, 0]);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bd8890599ae24e441d88f6597da25e0a1beaaef4","contentHash":"cdde2ecd6321006be2111291df8e472d3f7cabe49b252ec8d2a6c4636cc5367c"},"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/GatewayNetworkData.ts":{"path":"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/GatewayNetworkData.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":89}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":46}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":40}},"5":{"start":{"line":11,"column":0},"end":{"line":15,"column":3}},"6":{"start":{"line":16,"column":0},"end":{"line":16,"column":74}},"7":{"start":{"line":17,"column":29},"end":{"line":22,"column":1}},"8":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":24}},"10":{"start":{"line":21,"column":4},"end":{"line":21,"column":21}},"11":{"start":{"line":23,"column":0},"end":{"line":23,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":17,"column":29},"end":{"line":17,"column":30}},"loc":{"start":{"line":17,"column":44},"end":{"line":22,"column":1}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},{"start":{"line":18,"column":4},"end":{"line":20,"column":5}}],"line":18}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":1},"f":{"0":1},"b":{"0":[1,0]},"inputSourceMap":{"version":3,"file":"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/GatewayNetworkData.ts","sources":["/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/GatewayNetworkData.ts"],"names":[],"mappings":";;;AAAA,+CAAyD;AAEzD,MAAa,eAAgB,SAAQ,wBAAU;CAAG;AAAlD,0CAAkD;AAClD,MAAa,cAAe,SAAQ,kBAAI;CAEvC;AAFD,wCAEC;AAED,oBAAM,CAAC,GAAG,CAAC,cAAc,EAAE;IACzB,IAAI,EAAE,MAAM;IACZ,KAAK,EAAE,MAAM;IACb,MAAM,EAAE,CAAC,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;CAC/C,CAAC,CAAC;AACH,oBAAM,CAAC,GAAG,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;AAErD,MAAM,oBAAoB,GAAG,CAAC,SAAiB,EAAE,EAAE;IACxD,IAAI,SAAS,KAAK,iBAAiB,EAAE,CAAC;QACpC,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC;AANW,QAAA,oBAAoB,wBAM/B","sourcesContent":["import { Assignable, Enum, SCHEMA } from \"./solanaBorsh\";\n\nexport class UserTokenExpiry extends Assignable {}\nexport class NetworkFeature extends Enum {\n  userTokenExpiry?: UserTokenExpiry;\n}\n\nSCHEMA.set(NetworkFeature, {\n  kind: \"enum\",\n  field: \"enum\",\n  values: [[\"userTokenExpiry\", UserTokenExpiry]],\n});\nSCHEMA.set(UserTokenExpiry, { kind: \"struct\", fields: [] });\n\nexport const mapEnumToFeatureName = (enumValue: string) => {\n  if (enumValue === \"userTokenExpiry\") {\n    return \"expire\";\n  }\n\n  return enumValue;\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cd5b3f9858f55e9ed406f8b36832634b8909fbb0","contentHash":"13b8539cf9c0545b524b681595e738494208274627ea413d2dd01f75ad42991e"},"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/instruction.ts":{"path":"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/instruction.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":281}},"14":{"start":{"line":13,"column":22},"end":{"line":13,"column":46}},"15":{"start":{"line":14,"column":20},"end":{"line":14,"column":42}},"16":{"start":{"line":15,"column":18},"end":{"line":15,"column":44}},"17":{"start":{"line":16,"column":27},"end":{"line":16,"column":56}},"18":{"start":{"line":17,"column":29},"end":{"line":17,"column":60}},"19":{"start":{"line":18,"column":15},"end":{"line":18,"column":32}},"20":{"start":{"line":19,"column":30},"end":{"line":19,"column":62}},"21":{"start":{"line":45,"column":8},"end":{"line":47,"column":11}},"22":{"start":{"line":50,"column":8},"end":{"line":52,"column":11}},"23":{"start":{"line":55,"column":8},"end":{"line":59,"column":11}},"24":{"start":{"line":62,"column":8},"end":{"line":66,"column":11}},"25":{"start":{"line":69,"column":8},"end":{"line":73,"column":11}},"26":{"start":{"line":76,"column":8},"end":{"line":80,"column":11}},"27":{"start":{"line":83,"column":8},"end":{"line":85,"column":11}},"28":{"start":{"line":88,"column":8},"end":{"line":92,"column":11}},"29":{"start":{"line":95,"column":8},"end":{"line":99,"column":11}},"30":{"start":{"line":102,"column":8},"end":{"line":107,"column":11}},"31":{"start":{"line":110,"column":8},"end":{"line":112,"column":11}},"32":{"start":{"line":115,"column":0},"end":{"line":115,"column":48}},"33":{"start":{"line":126,"column":17},"end":{"line":133,"column":5}},"34":{"start":{"line":134,"column":17},"end":{"line":134,"column":60}},"35":{"start":{"line":135,"column":4},"end":{"line":139,"column":7}},"36":{"start":{"line":141,"column":0},"end":{"line":141,"column":38}},"37":{"start":{"line":152,"column":17},"end":{"line":157,"column":5}},"38":{"start":{"line":158,"column":17},"end":{"line":158,"column":63}},"39":{"start":{"line":159,"column":4},"end":{"line":163,"column":7}},"40":{"start":{"line":165,"column":0},"end":{"line":165,"column":44}},"41":{"start":{"line":179,"column":17},"end":{"line":188,"column":5}},"42":{"start":{"line":189,"column":17},"end":{"line":189,"column":68}},"43":{"start":{"line":190,"column":4},"end":{"line":194,"column":7}},"44":{"start":{"line":196,"column":0},"end":{"line":196,"column":22}},"45":{"start":{"line":197,"column":34},"end":{"line":201,"column":1}},"46":{"start":{"line":197,"column":99},"end":{"line":201,"column":1}},"47":{"start":{"line":210,"column":17},"end":{"line":210,"column":103}},"48":{"start":{"line":211,"column":17},"end":{"line":211,"column":53}},"49":{"start":{"line":212,"column":4},"end":{"line":216,"column":7}},"50":{"start":{"line":218,"column":0},"end":{"line":218,"column":24}},"51":{"start":{"line":227,"column":17},"end":{"line":227,"column":103}},"52":{"start":{"line":228,"column":17},"end":{"line":228,"column":53}},"53":{"start":{"line":229,"column":4},"end":{"line":233,"column":7}},"54":{"start":{"line":235,"column":0},"end":{"line":235,"column":24}},"55":{"start":{"line":244,"column":17},"end":{"line":244,"column":103}},"56":{"start":{"line":245,"column":17},"end":{"line":245,"column":55}},"57":{"start":{"line":246,"column":4},"end":{"line":250,"column":7}},"58":{"start":{"line":252,"column":0},"end":{"line":252,"column":28}},"59":{"start":{"line":262,"column":17},"end":{"line":266,"column":5}},"60":{"start":{"line":267,"column":17},"end":{"line":267,"column":69}},"61":{"start":{"line":268,"column":4},"end":{"line":272,"column":7}},"62":{"start":{"line":274,"column":0},"end":{"line":274,"column":36}},"63":{"start":{"line":283,"column":4},"end":{"line":297,"column":7}},"64":{"start":{"line":284,"column":31},"end":{"line":284,"column":85}},"65":{"start":{"line":285,"column":21},"end":{"line":290,"column":9}},"66":{"start":{"line":291,"column":21},"end":{"line":291,"column":77}},"67":{"start":{"line":292,"column":8},"end":{"line":296,"column":11}},"68":{"start":{"line":299,"column":0},"end":{"line":299,"column":50}},"69":{"start":{"line":308,"column":4},"end":{"line":322,"column":7}},"70":{"start":{"line":309,"column":31},"end":{"line":309,"column":85}},"71":{"start":{"line":310,"column":21},"end":{"line":315,"column":9}},"72":{"start":{"line":316,"column":21},"end":{"line":316,"column":82}},"73":{"start":{"line":317,"column":8},"end":{"line":321,"column":11}},"74":{"start":{"line":324,"column":0},"end":{"line":324,"column":60}},"75":{"start":{"line":333,"column":20},"end":{"line":335,"column":6}},"76":{"start":{"line":336,"column":27},"end":{"line":336,"column":91}},"77":{"start":{"line":337,"column":4},"end":{"line":337,"column":61}},"78":{"start":{"line":338,"column":17},"end":{"line":342,"column":5}},"79":{"start":{"line":343,"column":17},"end":{"line":343,"column":75}},"80":{"start":{"line":344,"column":4},"end":{"line":348,"column":7}},"81":{"start":{"line":350,"column":0},"end":{"line":350,"column":34}},"82":{"start":{"line":360,"column":17},"end":{"line":363,"column":5}},"83":{"start":{"line":364,"column":17},"end":{"line":364,"column":56}},"84":{"start":{"line":365,"column":4},"end":{"line":369,"column":7}},"85":{"start":{"line":371,"column":0},"end":{"line":371,"column":20}},"86":{"start":{"line":372,"column":0},"end":{"line":386,"column":3}},"87":{"start":{"line":387,"column":0},"end":{"line":390,"column":3}},"88":{"start":{"line":391,"column":0},"end":{"line":397,"column":3}},"89":{"start":{"line":398,"column":0},"end":{"line":401,"column":3}},"90":{"start":{"line":402,"column":0},"end":{"line":405,"column":3}},"91":{"start":{"line":406,"column":0},"end":{"line":409,"column":3}},"92":{"start":{"line":410,"column":0},"end":{"line":413,"column":3}},"93":{"start":{"line":414,"column":0},"end":{"line":417,"column":3}},"94":{"start":{"line":418,"column":0},"end":{"line":424,"column":3}},"95":{"start":{"line":425,"column":0},"end":{"line":428,"column":3}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":27},"end":{"line":48,"column":5}},"line":44},"8":{"name":"(anonymous_8)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":35},"end":{"line":53,"column":5}},"line":49},"9":{"name":"(anonymous_9)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":20},"end":{"line":60,"column":5}},"line":54},"10":{"name":"(anonymous_10)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":20},"end":{"line":67,"column":5}},"line":61},"11":{"name":"(anonymous_11)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":22},"end":{"line":74,"column":5}},"line":68},"12":{"name":"(anonymous_12)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":36},"end":{"line":81,"column":5}},"line":75},"13":{"name":"(anonymous_13)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":30},"end":{"line":86,"column":5}},"line":82},"14":{"name":"(anonymous_14)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":40},"end":{"line":93,"column":5}},"line":87},"15":{"name":"(anonymous_15)","decl":{"start":{"line":94,"column":4},"end":{"line":94,"column":5}},"loc":{"start":{"line":94,"column":45},"end":{"line":100,"column":5}},"line":94},"16":{"name":"(anonymous_16)","decl":{"start":{"line":101,"column":4},"end":{"line":101,"column":5}},"loc":{"start":{"line":101,"column":42},"end":{"line":108,"column":5}},"line":101},"17":{"name":"(anonymous_17)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":23},"end":{"line":113,"column":5}},"line":109},"18":{"name":"addGatekeeper","decl":{"start":{"line":125,"column":9},"end":{"line":125,"column":22}},"loc":{"start":{"line":125,"column":79},"end":{"line":140,"column":1}},"line":125},"19":{"name":"revokeGatekeeper","decl":{"start":{"line":151,"column":9},"end":{"line":151,"column":25}},"loc":{"start":{"line":151,"column":85},"end":{"line":164,"column":1}},"line":151},"20":{"name":"issue","decl":{"start":{"line":178,"column":9},"end":{"line":178,"column":14}},"loc":{"start":{"line":178,"column":127},"end":{"line":195,"column":1}},"line":178},"21":{"name":"(anonymous_21)","decl":{"start":{"line":197,"column":34},"end":{"line":197,"column":35}},"loc":{"start":{"line":197,"column":99},"end":{"line":201,"column":1}},"line":197},"22":{"name":"revoke","decl":{"start":{"line":209,"column":9},"end":{"line":209,"column":15}},"loc":{"start":{"line":209,"column":77},"end":{"line":217,"column":1}},"line":209},"23":{"name":"freeze","decl":{"start":{"line":226,"column":9},"end":{"line":226,"column":15}},"loc":{"start":{"line":226,"column":77},"end":{"line":234,"column":1}},"line":226},"24":{"name":"unfreeze","decl":{"start":{"line":243,"column":9},"end":{"line":243,"column":17}},"loc":{"start":{"line":243,"column":79},"end":{"line":251,"column":1}},"line":243},"25":{"name":"updateExpiry","decl":{"start":{"line":261,"column":9},"end":{"line":261,"column":21}},"loc":{"start":{"line":261,"column":95},"end":{"line":273,"column":1}},"line":261},"26":{"name":"addFeatureToNetwork","decl":{"start":{"line":282,"column":9},"end":{"line":282,"column":28}},"loc":{"start":{"line":282,"column":54},"end":{"line":298,"column":1}},"line":282},"27":{"name":"(anonymous_27)","decl":{"start":{"line":283,"column":43},"end":{"line":283,"column":44}},"loc":{"start":{"line":283,"column":56},"end":{"line":297,"column":5}},"line":283},"28":{"name":"removeFeatureFromNetwork","decl":{"start":{"line":307,"column":9},"end":{"line":307,"column":33}},"loc":{"start":{"line":307,"column":59},"end":{"line":323,"column":1}},"line":307},"29":{"name":"(anonymous_29)","decl":{"start":{"line":308,"column":43},"end":{"line":308,"column":44}},"loc":{"start":{"line":308,"column":56},"end":{"line":322,"column":5}},"line":308},"30":{"name":"expireToken","decl":{"start":{"line":332,"column":9},"end":{"line":332,"column":20}},"loc":{"start":{"line":332,"column":68},"end":{"line":349,"column":1}},"line":332},"31":{"name":"burn","decl":{"start":{"line":359,"column":9},"end":{"line":359,"column":13}},"loc":{"start":{"line":359,"column":86},"end":{"line":370,"column":1}},"line":359}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":2,"22":2,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":2,"34":2,"35":2,"36":1,"37":0,"38":0,"39":0,"40":1,"41":2,"42":2,"43":2,"44":1,"45":1,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":0,"84":0,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":2,"8":2,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":2,"19":0,"20":2,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/instruction.ts","sources":["/Users/daniel/code/civicteam/on-chain-identity-gateway/solana/gateway-ts/src/lib/instruction.ts"],"names":[],"mappings":"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","sourcesContent":["import { Assignable, Enum, SCHEMA } from \"./solanaBorsh\";\nimport { PROGRAM_ID } from \"./constants\";\nimport {\n  AccountMeta,\n  PublicKey,\n  SystemProgram,\n  SYSVAR_RENT_PUBKEY,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport { Active, Frozen, GatewayTokenState, Revoked } from \"./GatewayTokenData\";\nimport { NetworkFeature, UserTokenExpiry } from \"./GatewayNetworkData\";\nimport { getFeatureAccountAddress } from \"./util\";\nimport { AssignablePublicKey } from \"./AssignablePublicKey\";\n\n/**\n * Creates instructions to send to the gateway program.\n *\n * Must match solana/program/src/instruction.rs\n */\n\nclass AddGatekeeper extends Assignable {}\nclass Issue extends Assignable {\n  seed?: Uint8Array;\n  expireTime?: number;\n}\nclass SetState extends Assignable {\n  state!: GatewayTokenState;\n}\nclass UpdateExpiry extends Assignable {\n  expireTime!: number;\n}\nclass RevokeGatekeeper extends Assignable {}\nclass AddFeatureToNetwork extends Assignable {\n  feature!: NetworkFeature;\n}\nclass RemoveFeatureFromNetwork extends Assignable {\n  feature!: NetworkFeature;\n}\n\nclass ExpireToken extends Assignable {\n  padding?: Uint8Array;\n  gatekeeperNetwork!: AssignablePublicKey;\n}\nclass BurnToken extends Assignable {}\n\nexport class GatewayInstruction extends Enum {\n  addGatekeeper?: AddGatekeeper;\n  issue?: Issue;\n  setState?: SetState;\n  updateExpiry?: UpdateExpiry;\n  revokeGatekeeper?: RevokeGatekeeper;\n  addFeatureToNetwork?: AddFeatureToNetwork;\n  removeFeatureFromNetwork?: RemoveFeatureFromNetwork;\n  expireToken?: ExpireToken;\n  burnToken?: BurnToken;\n\n  static addGatekeeper(): GatewayInstruction {\n    return new GatewayInstruction({\n      addGatekeeper: new AddGatekeeper({}),\n    });\n  }\n\n  static issue(seed?: Uint8Array, expireTime?: number): GatewayInstruction {\n    return new GatewayInstruction({\n      issue: new Issue({ seed, expireTime }),\n    });\n  }\n\n  static revoke(): GatewayInstruction {\n    return new GatewayInstruction({\n      setState: new SetState({\n        state: new GatewayTokenState({ revoked: new Revoked({}) }),\n      }),\n    });\n  }\n\n  static freeze(): GatewayInstruction {\n    return new GatewayInstruction({\n      setState: new SetState({\n        state: new GatewayTokenState({ frozen: new Frozen({}) }),\n      }),\n    });\n  }\n\n  static unfreeze(): GatewayInstruction {\n    return new GatewayInstruction({\n      setState: new SetState({\n        state: new GatewayTokenState({ active: new Active({}) }),\n      }),\n    });\n  }\n\n  static updateExpiry(expireTime: number): GatewayInstruction {\n    return new GatewayInstruction({\n      updateExpiry: new UpdateExpiry({\n        expireTime,\n      }),\n    });\n  }\n\n  static revokeGatekeeper(): GatewayInstruction {\n    return new GatewayInstruction({\n      revokeGatekeeper: new RevokeGatekeeper({}),\n    });\n  }\n\n  static addFeatureToNetwork(feature: NetworkFeature): GatewayInstruction {\n    return new GatewayInstruction({\n      addFeatureToNetwork: new AddFeatureToNetwork({\n        feature,\n      }),\n    });\n  }\n\n  static removeFeatureFromNetwork(feature: NetworkFeature): GatewayInstruction {\n    return new GatewayInstruction({\n      removeFeatureFromNetwork: new RemoveFeatureFromNetwork({\n        feature,\n      }),\n    });\n  }\n\n  static expireToken(gatekeeperNetwork: PublicKey): GatewayInstruction {\n    return new GatewayInstruction({\n      expireToken: new ExpireToken({\n        // padding: null,\n        gatekeeperNetwork: AssignablePublicKey.fromPublicKey(gatekeeperNetwork),\n      }),\n    });\n  }\n\n  static burnToken(): GatewayInstruction {\n    return new GatewayInstruction({\n      burnToken: new BurnToken({}),\n    });\n  }\n}\n\n/**\n * Add a gatekeeper to a gatekeeper network.\n * Returns a Solana instruction that must be signed by the gatekeeper network authority.\n *\n * @param payer The payer of the transaction (used to pay rent into the gatekeeper account)\n * @param gatekeeperAccount An uninitialised gatekeeper account PDA. The address must be derived via getGatekeeperAccountKeyFromGatekeeperAuthority()\n * @param gatekeeperAuthority The gatekeeper to add to the network\n * @param network The gatekeeper network that the account is being added to.\n */\nexport function addGatekeeper(\n  payer: PublicKey,\n  gatekeeperAccount: PublicKey,\n  gatekeeperAuthority: PublicKey,\n  network: PublicKey,\n): TransactionInstruction {\n  const keys: AccountMeta[] = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: gatekeeperAccount, isSigner: false, isWritable: true },\n    { pubkey: gatekeeperAuthority, isSigner: false, isWritable: false },\n    { pubkey: network, isSigner: true, isWritable: false },\n    { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n  ];\n  const data = GatewayInstruction.addGatekeeper().encode();\n  return new TransactionInstruction({\n    keys,\n    programId: PROGRAM_ID,\n    data,\n  });\n}\n\n/**\n * Removes a gatekeeper from a gatekeeper network.\n * Returns a Solana instruction that must be signed by the gatekeeper network authority.\n *\n * @param funds_to The account the gatekeeper account's rent goes to\n * @param gatekeeperAccount The gatekeeper account PDA. The address must be derived via getGatekeeperAccountKeyFromGatekeeperAuthority()\n * @param gatekeeperAuthority The gatekeeper to remove from the network\n * @param network The gatekeeper network that the account is being removed from.\n */\nexport function revokeGatekeeper(\n  funds_to: PublicKey,\n  gatekeeperAccount: PublicKey,\n  gatekeeperAuthority: PublicKey,\n  network: PublicKey,\n): TransactionInstruction {\n  const keys: AccountMeta[] = [\n    { pubkey: funds_to, isSigner: false, isWritable: true },\n    { pubkey: gatekeeperAccount, isSigner: false, isWritable: true },\n    { pubkey: gatekeeperAuthority, isSigner: false, isWritable: false },\n    { pubkey: network, isSigner: true, isWritable: false },\n  ];\n  const data = GatewayInstruction.revokeGatekeeper().encode();\n  return new TransactionInstruction({\n    keys,\n    programId: PROGRAM_ID,\n    data,\n  });\n}\n\n/**\n * Issue a gateway token to the owner publicKey.\n * Returns a Solana instruction that must be signed by the gatekeeper authority.\n * @param gatewayTokenAccount An uninitialised gateway token account PDA. The address must be derived via getGatewayTokenAddressForOwnerAndGatekeeperNetwork\n * @param payer The payer of the transaction (used to pay rent into the gatekeeper account).\n * @param gatekeeperAccount The account in the gatekeeper network of the gatekeeper issuing the token\n * @param owner The recipient of the token\n * @param gatekeeperAuthority The gatekeeper issuing the token\n * @param gatekeeperNetwork The network that the gatekeeper belongs to\n * @param seed An 8-byte seed array, used to add multiple tokens to the same owner. Must be unique to each token, if present\n * @param expireTime The unix timestamp at which the token is no longer valid\n */\nexport function issue(\n  gatewayTokenAccount: PublicKey,\n  payer: PublicKey,\n  gatekeeperAccount: PublicKey,\n  owner: PublicKey,\n  gatekeeperAuthority: PublicKey,\n  gatekeeperNetwork: PublicKey,\n  seed?: Uint8Array,\n  expireTime?: number,\n): TransactionInstruction {\n  const keys: AccountMeta[] = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: gatewayTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: owner, isSigner: false, isWritable: false },\n    { pubkey: gatekeeperAccount, isSigner: false, isWritable: false },\n    { pubkey: gatekeeperAuthority, isSigner: true, isWritable: false },\n    { pubkey: gatekeeperNetwork, isSigner: false, isWritable: false },\n    { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n  ];\n  const data = GatewayInstruction.issue(seed, expireTime).encode();\n  return new TransactionInstruction({\n    keys,\n    programId: PROGRAM_ID,\n    data,\n  });\n}\n\nconst getStateChangeAccountMeta = (\n  gatewayTokenAccount: PublicKey,\n  gatekeeperAuthority: PublicKey,\n  gatekeeperAccount: PublicKey,\n): AccountMeta[] => [\n  { pubkey: gatewayTokenAccount, isSigner: false, isWritable: true },\n  { pubkey: gatekeeperAuthority, isSigner: true, isWritable: false },\n  { pubkey: gatekeeperAccount, isSigner: false, isWritable: false },\n];\n\n/**\n * Revoke a gateway token.\n * Returns a Solana instruction that must be signed by the gatekeeper authority.\n * @param gatewayTokenAccount The gateway token to revoke\n * @param gatekeeperAuthority The gatekeeper revoking the token (must be in the same network as the issuing gatekeeper)\n * @param gatekeeperAccount The account in the gatekeeper network of the gatekeeper revoking the token\n */\nexport function revoke(\n  gatewayTokenAccount: PublicKey,\n  gatekeeperAuthority: PublicKey,\n  gatekeeperAccount: PublicKey,\n): TransactionInstruction {\n  const keys: AccountMeta[] = getStateChangeAccountMeta(\n    gatewayTokenAccount,\n    gatekeeperAuthority,\n    gatekeeperAccount,\n  );\n  const data = GatewayInstruction.revoke().encode();\n  return new TransactionInstruction({\n    keys,\n    programId: PROGRAM_ID,\n    data,\n  });\n}\n\n/**\n * Freeze a gateway token.\n * Returns a Solana instruction that must be signed by the gatekeeper authority.\n * @param gatewayTokenAccount The gateway token to freeze\n * @param gatekeeperAuthority The gatekeeper freezing the token (must be equal to the issuing gatekeeper)\n * @param gatekeeperAccount The account in the gatekeeper network of the gatekeeper freezing the token\n */\nexport function freeze(\n  gatewayTokenAccount: PublicKey,\n  gatekeeperAuthority: PublicKey,\n  gatekeeperAccount: PublicKey,\n): TransactionInstruction {\n  const keys: AccountMeta[] = getStateChangeAccountMeta(\n    gatewayTokenAccount,\n    gatekeeperAuthority,\n    gatekeeperAccount,\n  );\n  const data = GatewayInstruction.freeze().encode();\n  return new TransactionInstruction({\n    keys,\n    programId: PROGRAM_ID,\n    data,\n  });\n}\n\n/**\n * Unfreeze a gateway token.\n * Returns a Solana instruction that must be signed by the gatekeeper authority.\n * @param gatewayTokenAccount The gateway token to unfreeze\n * @param gatekeeperAuthority The gatekeeper unfreezing the token (must be equal to the issuing gatekeeper)\n * @param gatekeeperAccount The account in the gatekeeper network of the gatekeeper unfreezing the token\n */\nexport function unfreeze(\n  gatewayTokenAccount: PublicKey,\n  gatekeeperAuthority: PublicKey,\n  gatekeeperAccount: PublicKey,\n): TransactionInstruction {\n  const keys: AccountMeta[] = getStateChangeAccountMeta(\n    gatewayTokenAccount,\n    gatekeeperAuthority,\n    gatekeeperAccount,\n  );\n  const data = GatewayInstruction.unfreeze().encode();\n  return new TransactionInstruction({\n    keys,\n    programId: PROGRAM_ID,\n    data,\n  });\n}\n\n/**\n * Update the expiry time of a gateway token.\n * Returns a Solana instruction that must be signed by the gatekeeper authority.\n * @param gatewayTokenAccount The gateway token to be updated (must have an expiry time)\n * @param gatekeeperAuthority The gatekeeper (must be equal to the issuing gatekeeper)\n * @param gatekeeperAccount The account in the gatekeeper network of the gatekeeper\n * @param expireTime The new expiry time\n */\nexport function updateExpiry(\n  gatewayTokenAccount: PublicKey,\n  gatekeeperAuthority: PublicKey,\n  gatekeeperAccount: PublicKey,\n  expireTime: number,\n): TransactionInstruction {\n  const keys: AccountMeta[] = [\n    { pubkey: gatewayTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: gatekeeperAuthority, isSigner: true, isWritable: false },\n    { pubkey: gatekeeperAccount, isSigner: false, isWritable: false },\n  ];\n  const data = GatewayInstruction.updateExpiry(expireTime).encode();\n  return new TransactionInstruction({\n    keys,\n    programId: PROGRAM_ID,\n    data,\n  });\n}\n\n/**\n * Add a feature to an existing Gatekeeper Network.\n * Returns a Solana instruction that must be signed by the gatekeeper authority.\n * @param payer The payer of the transaction (used to pay rent into the gatekeeper account)\n * @param network The gatekeeper network that the account is being added to.\n * @param feature The NetworkFeature Enum value\n */\nexport async function addFeatureToNetwork(\n  payer: PublicKey,\n  network: PublicKey,\n  feature: NetworkFeature,\n): Promise<TransactionInstruction> {\n  const featureAccount = getFeatureAccountAddress(feature, network);\n\n  const keys: AccountMeta[] = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: network, isSigner: true, isWritable: false },\n    { pubkey: featureAccount, isSigner: false, isWritable: true },\n    { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n  ];\n  const data = GatewayInstruction.addFeatureToNetwork(feature).encode();\n  return new TransactionInstruction({\n    keys,\n    programId: PROGRAM_ID,\n    data,\n  });\n}\n\n/**\n * Remove a feature to an existing Gatekeeper Network.\n * Returns a Solana instruction that must be signed by the gatekeeper authority.\n * @param payer The payer of the transaction (used to pay rent into the gatekeeper account)\n * @param network The gatekeeper network that the account is being added to.\n * @param feature The NetworkFeature Enum value\n */\nexport async function removeFeatureFromNetwork(\n  payer: PublicKey,\n  network: PublicKey,\n  feature: NetworkFeature,\n): Promise<TransactionInstruction> {\n  const featureAccount = getFeatureAccountAddress(feature, network);\n\n  const keys: AccountMeta[] = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: network, isSigner: true, isWritable: false },\n    { pubkey: featureAccount, isSigner: false, isWritable: true },\n    { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n  ];\n  const data = GatewayInstruction.removeFeatureFromNetwork(feature).encode();\n  return new TransactionInstruction({\n    keys,\n    programId: PROGRAM_ID,\n    data,\n  });\n}\n\n/**\n * For a gatekeeper network that supports it, create an expireToken instruction,\n * that is to be signed by the gateway token owner.\n * @param gatewayTokenAccount\n * @param owner\n * @param gatekeeperNetwork\n */\nexport function expireToken(\n  gatewayTokenAccount: PublicKey,\n  owner: PublicKey,\n  gatekeeperNetwork: PublicKey,\n): TransactionInstruction {\n  const feature = new NetworkFeature({\n    userTokenExpiry: new UserTokenExpiry({}),\n  });\n  const featureAccount = getFeatureAccountAddress(feature, gatekeeperNetwork);\n  console.log(\"featureAccount\", featureAccount.toBase58());\n  const keys: AccountMeta[] = [\n    { pubkey: gatewayTokenAccount, isSigner: false, isWritable: true },\n    { pubkey: owner, isSigner: true, isWritable: true },\n    { pubkey: featureAccount, isSigner: false, isWritable: false },\n  ];\n  const data = GatewayInstruction.expireToken(gatekeeperNetwork).encode();\n  return new TransactionInstruction({\n    keys,\n    programId: PROGRAM_ID,\n    data,\n  });\n}\n\n/**\n * Burn a gateway token.\n * Returns a Solana instruction that must be signed by the gatekeeper authority.\n * @param gatewayTokenAccount The gateway token to burn\n * @param gatekeeperAuthority The gatekeeper burning the token (must be in the same network as the issuing gatekeeper)\n * @param gatekeeperAccount The account in the gatekeeper network of the gatekeeper revoking the token\n * @param recipient The account to receive the SOL from the burn\n */\nexport function burn(\n  gatewayTokenAccount: PublicKey,\n  gatekeeperAuthority: PublicKey,\n  gatekeeperAccount: PublicKey,\n  recipient: PublicKey,\n): TransactionInstruction {\n  const keys: AccountMeta[] = [\n    ...getStateChangeAccountMeta(\n      gatewayTokenAccount,\n      gatekeeperAuthority,\n      gatekeeperAccount,\n    ),\n    { pubkey: recipient, isSigner: false, isWritable: true },\n  ];\n  const data = GatewayInstruction.burnToken().encode();\n  return new TransactionInstruction({\n    keys,\n    programId: PROGRAM_ID,\n    data,\n  });\n}\n\nSCHEMA.set(GatewayInstruction, {\n  kind: \"enum\",\n  field: \"enum\",\n  values: [\n    [\"addGatekeeper\", AddGatekeeper],\n    [\"issue\", Issue],\n    [\"setState\", SetState],\n    [\"updateExpiry\", UpdateExpiry],\n    [\"revokeGatekeeper\", RevokeGatekeeper],\n    [\"addFeatureToNetwork\", AddFeatureToNetwork],\n    [\"removeFeatureFromNetwork\", RemoveFeatureFromNetwork],\n    [\"expireToken\", ExpireToken],\n    [\"burnToken\", BurnToken],\n  ],\n});\nSCHEMA.set(AddGatekeeper, {\n  kind: \"struct\",\n  fields: [],\n});\nSCHEMA.set(Issue, {\n  kind: \"struct\",\n  fields: [\n    [\"seed\", { kind: \"option\", type: [8] }],\n    [\"expireTime\", { kind: \"option\", type: \"u64\" }],\n  ],\n});\nSCHEMA.set(SetState, {\n  kind: \"struct\",\n  fields: [[\"state\", GatewayTokenState]],\n});\nSCHEMA.set(UpdateExpiry, {\n  kind: \"struct\",\n  fields: [[\"expireTime\", \"u64\"]],\n});\nSCHEMA.set(RevokeGatekeeper, {\n  kind: \"struct\",\n  fields: [],\n});\nSCHEMA.set(AddFeatureToNetwork, {\n  kind: \"struct\",\n  fields: [[\"feature\", NetworkFeature]],\n});\nSCHEMA.set(RemoveFeatureFromNetwork, {\n  kind: \"struct\",\n  fields: [[\"feature\", NetworkFeature]],\n});\nSCHEMA.set(ExpireToken, {\n  kind: \"struct\",\n  fields: [\n    [\"padding\", { kind: \"option\", type: [8] }],\n    [\"gatekeeperNetwork\", AssignablePublicKey],\n  ],\n});\nSCHEMA.set(BurnToken, {\n  kind: \"struct\",\n  fields: [],\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"516499eee1c6f7706fb5f25481ddff2becc2a5fb","contentHash":"4f4805e6533acf559dd5dd42999e3386bf40d1fee82f4d82c6662818de287a2f"}}