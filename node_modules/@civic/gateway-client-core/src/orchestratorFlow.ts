import { GatekeeperClient } from './gatekeeperClient';
import { prefixLogger } from './logger';
import { LoggingInterface } from './logger/provider.logger';
import { Store } from './state/state';

export class OrchestratorFlow {
  protected log: LoggingInterface;

  constructor(
    readonly gatewayCoreStore: Store,
    readonly gatekeeperClient: GatekeeperClient,
    readonly abortController: AbortController
  ) {
    this.log = prefixLogger('OrchestratorFlow');
  }

  setGatekeeperClientFlowId() {
    const fullState = this.gatewayCoreStore.getState();
    if (!fullState.output?.flowParameters?.flowId) {
      this.log.error('Missing flowId', fullState);
      throw new Error('Missing flowId');
    }
    this.gatekeeperClient.setFlowId(fullState.output?.flowParameters?.flowId);
  }
}
