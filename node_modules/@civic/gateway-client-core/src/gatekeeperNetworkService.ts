import { ChainType } from './types/chain';

export const GKN_SERVICE_ENDPOINTS: Record<string, string> = {
  local: 'https://dev.api.civic.com/gkn-dev',
  test: 'https://dev.api.civic.com/gkn-dev',
  dev: 'https://dev.api.civic.com/gkn-dev',
  preprod: `https://dev.api.civic.com/gkn-preprod`,
  prod: 'https://api.civic.com/gkn',
};

export type GknData = {
  id: string;
  chains: Partial<Record<ChainType, GknDataChain>>;
  client?: {
    tokenActiveDisplay?: 'default' | 'minimal' | 'hidden';
  };
};

export type GknDataChain = {
  frontendPollingTimeoutSeconds?: number;
  chainSpecificId?: string;
};

export const getGatekeeperNetworkData = async (stage: string, gknId: string): Promise<GknData> => {
  if (!GKN_SERVICE_ENDPOINTS[stage]) {
    throw new Error(`No Gatekeeper Network Service endpoint found for stage ${stage}`);
  }
  const results = await fetch(`${GKN_SERVICE_ENDPOINTS[stage]}/public/gatekeeperNetwork/${gknId}`);
  const gknData = await results.json();
  if (gknData?.id !== gknId) {
    throw new Error(`Could not fetch data from Gatekeeper Network Service for ${gknId}`);
  }
  return gknData;
};
