{"version":3,"file":"zustand-computed-state.esm.js","sources":["../src/utils.ts","../src/index.ts"],"sourcesContent":["export function getAllGetters(obj: any) {\n  const getters: any = {};\n\n  // Iterate over all properties of the object itself (not its prototype chain)\n  Object.getOwnPropertyNames(obj).forEach(prop => {\n    const descriptor = Object.getOwnPropertyDescriptor(obj, prop);\n\n    // Check if the property has a getter\n    if (descriptor && typeof descriptor.get === 'function') {\n      getters[prop] = descriptor.get;\n    }\n  });\n\n  // Iterate over all properties of the object's prototype chain\n  let proto = Object.getPrototypeOf(obj);\n  while (proto !== null) {\n    Object.getOwnPropertyNames(proto).forEach(prop => {\n      const descriptor = Object.getOwnPropertyDescriptor(proto, prop);\n\n      // Check if the property has a getter\n      if (\n        descriptor &&\n        typeof descriptor.get === 'function' &&\n        !getters.hasOwnProperty(prop)\n      ) {\n        getters[prop] = descriptor.get;\n      }\n    });\n\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return getters;\n}\n","import { StateCreator, StoreMutatorIdentifier } from 'zustand';\nimport { getAllGetters } from './utils';\n\nconst prefix = '$$_computed_';\ntype ComputeFunctionType<StoreType, T> = (store: StoreType) => T;\n\nfunction injectComputedMiddleware(f: StateCreator<any>): StateCreator<any> {\n  return (set, get, api) => {\n    function getComputedState(state: any) {\n      const computedFunctions = Object.entries(state)\n        .filter(([key]) => key.startsWith(prefix))\n        .map(s => s[1] as ComputeFunctionType<any, any>);\n\n      const computedSt = computedFunctions.reduce(\n        (acc, cur) => ({\n          ...acc,\n          ...cur(state),\n        }),\n        {}\n      );\n\n      return computedSt;\n    }\n    const setWithComputed = (\n      update: any | ((state: any) => any),\n      replace?: boolean\n    ) => {\n      set((state: any) => {\n        const updated = typeof update === 'object' ? update : update(state);\n        const newState = {\n          ...state,\n          ...updated,\n        };\n\n        return {\n          ...newState,\n          ...getComputedState(newState),\n        };\n      }, replace);\n    };\n\n    api.setState = setWithComputed;\n    const st = f(setWithComputed, get, api);\n\n    return Object.assign({}, st, getComputedState(st));\n  };\n}\n\nfunction withGetters(initialState: any) {\n  const getters = getAllGetters(initialState);\n  return (newState: any) => {\n    const result: any = {};\n\n    Object.keys(getters).forEach(key => {\n      result[key] = getters[key].bind(newState)();\n    });\n\n    return result;\n  };\n}\n\nexport function compute<StoreType>(\n  store: StoreType,\n  get?: never,\n  compute?: never\n): StoreType;\n\nexport function compute<StoreType, T extends Partial<StoreType>>(\n  id: string,\n  get: () => StoreType,\n  compute: ComputeFunctionType<StoreType, T>\n): T;\n\nexport function compute<StoreType, T extends Partial<StoreType>>(\n  get: () => StoreType,\n  compute: ComputeFunctionType<StoreType, T>,\n  id?: never\n): T;\nexport function compute(\n  // @ts-ignore\n  getOrId: any,\n  getOrCompute: any,\n  computeOrUndefined: any\n) {\n  if (typeof getOrId === 'string') {\n    return {\n      [`${prefix}_${getOrId}`]: computeOrUndefined,\n    };\n  }\n\n  if (typeof getOrId === 'object') {\n    return {\n      ...getOrId,\n      [prefix]: withGetters(getOrId),\n    };\n  }\n\n  return {\n    [prefix]: getOrCompute,\n  } as any;\n}\n\ntype ComputedState = <\n  T,\n  Mps extends [StoreMutatorIdentifier, unknown][] = [],\n  Mcs extends [StoreMutatorIdentifier, unknown][] = []\n>(\n  f: StateCreator<T, Mps, Mcs>\n) => StateCreator<T, Mps, Mcs>;\n\nexport const computed = (((f: any) =>\n  injectComputedMiddleware(f as any) as any) as unknown) as ComputedState;\n"],"names":["getAllGetters","obj","getters","Object","getOwnPropertyNames","forEach","prop","descriptor","getOwnPropertyDescriptor","get","proto","getPrototypeOf","hasOwnProperty","prefix","injectComputedMiddleware","f","set","api","getComputedState","state","computedFunctions","entries","filter","_ref","key","startsWith","map","s","computedSt","reduce","acc","cur","_extends","setWithComputed","update","replace","updated","newState","setState","st","assign","withGetters","initialState","result","keys","bind","compute","getOrId","getOrCompute","computeOrUndefined","_ref2","_extends2","_ref3","computed"],"mappings":"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"}