import { GatewayClientParameters } from '../types/parameters';

export type PayerInputs = Pick<GatewayClientParameters, 'wallet' | 'gatekeeperSendsTransaction' | 'payer'>;
/**
 * Return the payer based on the gatekeeperSendsTransaction flag and any specified payer.
 * If gatekeeperSendsTransaction is defined, then ownerSings is the inverse of its value
 * If gatekeeperSendsTransaction is not defined, then ownerSings is the inverse of broadcastTransaction
 * If neither are defined, ownerSigns is enabled
 */
export const getPayer = ({ gatekeeperSendsTransaction, payer, wallet }: PayerInputs): string | undefined => {
  if (gatekeeperSendsTransaction) return undefined; // Gatekeeper is the sender, no payer is passed from the client
  // Payer is passed from the client or payer and gatekeeperSendsTransaction are both unspecified
  // If payer is not passed, use the wallet address if gatekeeperSendsTransaction is not set or false
  return payer || wallet?.address;
};
