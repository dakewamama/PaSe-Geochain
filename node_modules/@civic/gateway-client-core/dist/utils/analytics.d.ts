import { Stage } from '../types/parameters';
import { FlowParameters } from '../../src/types/gatewayCore';
export type CivicAnalyticsEvent = {
    did: string;
    validationId?: string;
    networkAddress: string;
    referrer?: string;
    redirectUrl?: string;
    wallet: string;
    domain: string;
    action: string;
    chainNetwork: string;
    chain: string;
    ownerSigns: string;
    flowId: string;
    flowType: string;
    errorCode?: string;
    partnerAppId?: string;
    signedTx?: string;
    civicClient?: string;
    instanceId?: string;
    provider?: string;
    hideWalletPrompts?: string;
};
export type SendBeaconFn = (url: string | URL, data?: BodyInit | null | undefined) => boolean;
export declare const CIVIC_ANALYTICS_ENDPOINTS: Record<Stage, string | null>;
export declare const sendAnalyticsEvent: (stage: Stage, event: CivicAnalyticsEvent, sendBeacon?: SendBeaconFn) => Promise<void>;
export declare const sendOnCloseAnalyticsEvent: (flowParameters: FlowParameters, pendingTxHash?: string, sendBeacon?: SendBeaconFn) => Promise<void>;
