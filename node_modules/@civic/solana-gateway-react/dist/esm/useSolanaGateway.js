import { PublicKey } from '@solana/web3.js';
import { useGateway } from '@civic/gateway-client-react';
import { createSolanaTransactionFromBase64 } from './util';
export const useSolanaGateway = () => {
    const { gatewayToken, gatewayTokenTransaction } = useGateway();
    const solanaGatewayToken = gatewayToken
        ? {
            issuingGatekeeper: new PublicKey(gatewayToken.issuingGatekeeper),
            gatekeeperNetworkAddress: new PublicKey(gatewayToken.gatekeeperNetworkAddress),
            owner: new PublicKey(gatewayToken.owner),
            state: gatewayToken.state,
            publicKey: new PublicKey(gatewayToken.identifier),
            expiryTime: gatewayToken.expiryTime,
        }
        : undefined;
    const solanaGatewayTokenTransaction = gatewayTokenTransaction
        ? createSolanaTransactionFromBase64(gatewayTokenTransaction)
        : undefined;
    return Object.assign(Object.assign({}, useGateway()), { gatewayToken: solanaGatewayToken, gatewayTokenTransaction: solanaGatewayTokenTransaction });
};
