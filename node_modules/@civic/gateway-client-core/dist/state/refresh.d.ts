import { GatewayCoreState } from '../types/gatewayCore';
import { ExtendedGatewayStatus, GatewayStatus, InternalGatewayStatus } from '../types/gateway';
import { StatusIfGatekeeperRecordRejectedType, GatewayTokenCheckType } from './common';
export type CalculateFromRefreshInReviewReturnType = ExtendedGatewayStatus.REFRESH_AWAITING_ON_CHAIN_TOKEN | ExtendedGatewayStatus.CHAIN_TRANSACTION_ERROR | ExtendedGatewayStatus.REFRESH_AWAITING_TRANSACTION_SEND | ExtendedGatewayStatus.REFRESH_AWAITING_THIRD_PARTY_TRANSACTION_SEND;
export declare const calculateRefreshStartPreApprovedTransaction: (state: GatewayCoreState) => ExtendedGatewayStatus.REFRESH_CLIENT_SENDS_REQUEST_NEW_TX | ExtendedGatewayStatus.REFRESH_CLIENT_THIRD_PARTY_SENDS_REQUEST_NEW_TX | undefined;
export declare const calculateFromRefreshInReview: (state: GatewayCoreState) => CalculateFromRefreshInReviewReturnType | undefined;
export type CalculateFromGatekeeperRefreshRequestedReturnType = ExtendedGatewayStatus.REFRESH_CLIENT_PAYER_REQUESTED | ExtendedGatewayStatus.REFRESH_IN_REVIEW;
export declare const calculateFromGatekeeperRefreshRequested: (state: GatewayCoreState) => CalculateFromGatekeeperRefreshRequestedReturnType | undefined;
export type TokenNotRefreshRequiredReturnType = GatewayTokenCheckType | ExtendedGatewayStatus.REFRESH_AWAITING_ON_CHAIN_TOKEN | GatewayStatus.REFRESH_TOKEN_REQUIRED;
export declare const tokenNotRefreshRequired: (state: GatewayCoreState) => TokenNotRefreshRequiredReturnType | undefined;
export type ComputeRefreshRequestedReturnType = InternalGatewayStatus;
export declare const computeRefreshRequested: (state: GatewayCoreState) => ComputeRefreshRequestedReturnType;
export type ComputeRefreshInReviewReturnType = InternalGatewayStatus | ExtendedGatewayStatus.REFRESH_AWAITING_ON_CHAIN_TOKEN | ExtendedGatewayStatus.CHAIN_TRANSACTION_ERROR | ExtendedGatewayStatus.REFRESH_AWAITING_TRANSACTION_SEND | ExtendedGatewayStatus.REFRESH_AWAITING_THIRD_PARTY_TRANSACTION_SEND;
export declare const computeRefreshInReview: (state: GatewayCoreState) => ComputeRefreshInReviewReturnType;
export type CalculateRefreshStatusReturnType = InternalGatewayStatus;
export declare const calculateRefreshStatus: (state: GatewayCoreState) => CalculateRefreshStatusReturnType | undefined;
export type ComputeRefreshStatusReturnType = InternalGatewayStatus | ExtendedGatewayStatus.REFRESH_AWAITING_ON_CHAIN_TOKEN | ExtendedGatewayStatus.CHAIN_TRANSACTION_ERROR | ExtendedGatewayStatus.REFRESH_AWAITING_TRANSACTION_SEND | ExtendedGatewayStatus.REFRESH_AWAITING_THIRD_PARTY_TRANSACTION_SEND | ExtendedGatewayStatus.REFRESH_USER_INFORMATION_VALIDATED;
export declare const computeRefreshStatus: (state: GatewayCoreState) => ComputeRefreshStatusReturnType;
export type CalculateFromRefreshAwaitingOnChainReturnType = InternalGatewayStatus | ExtendedGatewayStatus.CHAIN_TIMEOUT_ERROR;
export declare const calculateFromRefreshAwaitingOnChain: (state: GatewayCoreState) => CalculateFromRefreshAwaitingOnChainReturnType | undefined;
export type ComputeRefreshAwaitingOnChainTokenReturnType = TokenNotRefreshRequiredReturnType | StatusIfGatekeeperRecordRejectedType | CalculateFromRefreshAwaitingOnChainReturnType;
export declare const computeRefreshAwaitingOnChainToken: (state: GatewayCoreState) => ComputeRefreshAwaitingOnChainTokenReturnType;
export declare const computeRefreshStartPreApprovedTransaction: (state: GatewayCoreState) => TokenNotRefreshRequiredReturnType | ExtendedGatewayStatus.REFRESH_CLIENT_SENDS_REQUEST_NEW_TX | ExtendedGatewayStatus.REFRESH_CLIENT_THIRD_PARTY_SENDS_REQUEST_NEW_TX;
