/* eslint-disable import/no-extraneous-dependencies */
// rollup.config.js
import { createRequire } from 'node:module';
import commonjs from '@rollup/plugin-commonjs';
import json from '@rollup/plugin-json';
import resolve from '@rollup/plugin-node-resolve';
import typescript from '@rollup/plugin-typescript';
import terser from '@rollup/plugin-terser';

const require = createRequire(import.meta.url);
const { name, main, module, browser } = require('./package.json');

const isProduction = process.env.NODE_ENV === 'production';

const settings = {
  globals: {
    ms: 'ms',
  },
};

export default {
  input: 'src/index.ts',
  output: [
    {
      file: main,
      name: main,
      ...settings,
      format: 'cjs',
      plugins: [isProduction && terser()],
      exports: 'named',
      sourcemap: true,
    },
    {
      file: module,
      ...settings,
      name,
      format: 'es',
      exports: 'named',
      sourcemap: true,
    },
    {
      file: browser,
      ...settings,
      name,
      format: 'umd',
      exports: 'named',
      sourcemap: true,
    },
  ],
  external: ['zustand'],
  plugins: [
    json(),
    resolve({
      jsnext: true,
      main: true,
    }),
    typescript({
      // eslint-disable-next-line global-require
      typescript: require('typescript'),
      outDir: 'dist',
      exclude: 'test/**',
    }),
    commonjs({
      include: 'node_modules/**',
      extensions: ['.js'],
      ignoreGlobal: false,
      sourceMap: false,
    }),
  ],
  treeshake: {
    moduleSideEffects: true,
  },
};
