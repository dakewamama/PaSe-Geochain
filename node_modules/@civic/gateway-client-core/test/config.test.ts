import { Stage } from '../src/types/parameters';
import { getCivicPassEndpoint, IFRAME_ENDPOINTS } from '../src/config';
import { expect } from 'chai';

describe('config tests', () => {
  context('getCivicPassEndpoint', () => {
    context('with no endpoint found for the given stage', () => {
      it('should throw an error', () => {
        // Arrange
        const stage = 'invalid-stage';
        // Act
        // Assert
        expect(() => getCivicPassEndpoint(stage as Stage)).to.throw(`Invalid stage ${stage}`);
      });
    });
    Object.entries(IFRAME_ENDPOINTS).forEach(([stage]) => {
      context(`with stage ${stage}`, () => {
        it(`should return the correct endpoint`, () => {
          // Arrange
          // Act
          const result = getCivicPassEndpoint(stage as Stage);
          // Assert
          const endpoint = ['local', 'test'].includes(stage)
            ? 'http://localhost:3004'
            : `https://passv2${stage !== 'prod' ? `-${stage}` : ''}.civic.com`;
          expect(result).to.equal(endpoint);
        });
      });
    });
  });
});
