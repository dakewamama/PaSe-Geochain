import { GatekeeperClient } from './gatekeeperClient';
import { LoggingInterface } from './logger/provider.logger';
import { OrchestratorFlow } from './orchestratorFlow';
import { Store } from './state/state';
export declare class PartnerReview extends OrchestratorFlow {
    readonly gatewayCoreStore: Store;
    readonly gatekeeperClient: GatekeeperClient;
    readonly abortController: AbortController;
    readonly pollingIntervalSeconds: number;
    protected log: LoggingInterface;
    private timers;
    constructor(gatewayCoreStore: Store, gatekeeperClient: GatekeeperClient, abortController: AbortController, pollingIntervalSeconds?: number);
    pollForReviewFinished(): Promise<void>;
    abort(): void;
}
