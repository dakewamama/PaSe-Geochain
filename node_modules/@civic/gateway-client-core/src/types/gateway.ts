export enum GatewayStatus {
  UNKNOWN = 'UNKNOWN', // the wallet or gatekeeper network is not set
  CHECKING = 'CHECKING', // the blockchain is being queried to find an existing gateway token
  NOT_REQUESTED = 'NOT_REQUESTED', // then token has not been requested
  COLLECTING_USER_INFORMATION = 'COLLECTING_USER_INFORMATION', // the wallet owner is undergoing KYC
  IN_REVIEW = 'IN_REVIEW', // the token has been requested and civic gatekeeper is reviewing the request
  REJECTED = 'REJECTED', // the token issuance request was rejected
  REVOKED = 'REVOKED', // the token has been revoked
  FROZEN = 'FROZEN', // the token has been frozen
  ACTIVE = 'ACTIVE', // the token has been issued successfully and is in an active state
  ERROR = 'ERROR', // something went wrong
  LOCATION_NOT_SUPPORTED = 'LOCATION_NOT_SUPPORTED', // location is not currently supported
  VPN_NOT_SUPPORTED = 'VPN_NOT_SUPPORTED', // vpn usage is not currently supported
  REFRESH_TOKEN_REQUIRED = 'REFRESH_TOKEN_REQUIRED', // waiting for the user to complete the civic pass refresh flow
  VALIDATING_USER_INFORMATION = 'VALIDATING_USER_INFORMATION', // validation process is currently being reviewed
  USER_INFORMATION_VALIDATED = 'USER_INFORMATION_VALIDATED', // validation process has finished processing
  USER_INFORMATION_REJECTED = 'USER_INFORMATION_REJECTED', // validation process failed and needs to be restarted
}

// An extended status that provides more context on a gateway status, used to determine internal UI transitions, Not exposed in the public API
export enum ExtendedGatewayStatus {
  AWAITING_OWNER_TRANSACTION = 'AWAITING_OWNER_TRANSACTION', // waiting for the owner submitted transaction to be confirmed on the chain
  CHAIN_TIMEOUT_ERROR = 'CHAIN_TIMEOUT_ERROR', // we timed out waiting for the user submitted tx to confirm
  CONFIRM_OWNER_TRANSACTION = 'CONFIRM_OWNER_TRANSACTION', // prompt the user to confirm the owner transaction
  CHAIN_TRANSACTION_ERROR = 'CHAIN_TRANSACTION_ERROR', // during client-sends the userSendsTransaction call threw an error
  TOKEN_IN_PARTNER_REVIEW = 'TOKEN_IN_PARTNER_REVIEW', // during pii-sharing flow
  TOKEN_REFRESH_IN_REVIEW = 'TOKEN_REFRESH_IN_REVIEW', // during pii-sharing flow
  USER_VALIDATION_FAILED = 'USER_VALIDATION_FAILED', // during the user validation flow

  RESTART = 'RESTART', // the user needs to restart the flow
  CHAIN_SIGN_MESSAGE_ERROR = 'CHAIN_SIGN_MESSAGE_ERROR', // during civic-sign sign message request
  ISSUANCE_CLIENT_PAYER_REQUESTED = 'ISSUANCE_CLIENT_PAYER_REQUESTED', // set when the gatekeeper call is in progress
  ISSUANCE_AWAITING_TRANSACTION_SEND = 'ISSUANCE_AWAITING_TRANSACTION_SEND', // during issuance flow
  ISSUANCE_AWAITING_THIRD_PARTY_TRANSACTION_SEND = 'ISSUANCE_AWAITING_THIRD_PARTY_TRANSACTION_SEND', // during issuance flow
  ISSUANCE_AWAITING_ON_CHAIN_TOKEN = 'ISSUANCE_AWAITING_ON_CHAIN_TOKEN', // during issuance flow
  ISSUANCE_RESTART_DATA_COLLECTION = 'ISSUANCE_RESTART_DATA_COLLECTION', // the user already requested a token but it didn't complete successfully
  ISSUANCE_CLIENT_SENDS_REQUEST_NEW_TX = 'ISSUANCE_CLIENT_SENDS_REQUEST_NEW_TX',
  ISSUANCE_CLIENT_THIRD_PARTY_SENDS_REQUEST_NEW_TX = 'ISSUANCE_CLIENT_THIRD_PARTY_SENDS_REQUEST_NEW_TX', // triggers a request to the gatekeeper for a new transaction
  ISSUANCE_CLIENT_SENDS_START_NEW_TX = 'ISSUANCE_CLIENT_SENDS_START_NEW_TX', // We need to ask the user to request a new transaction

  REFRESH_USER_INFORMATION_VALIDATED = 'REFRESH_USER_INFORMATION_VALIDATED',
  REFRESH_CLIENT_PAYER_REQUESTED = 'REFRESH_CLIENT_PAYER_REQUESTED',
  REFRESH_IN_REVIEW = 'REFRESH_IN_REVIEW',
  REFRESH_AWAITING_TRANSACTION_SEND = 'REFRESH_AWAITING_TRANSACTION_SEND',
  REFRESH_AWAITING_THIRD_PARTY_TRANSACTION_SEND = 'REFRESH_AWAITING_THIRD_PARTY_TRANSACTION_SEND',
  REFRESH_AWAITING_ON_CHAIN_TOKEN = 'REFRESH_AWAITING_ON_CHAIN_TOKEN',
  RESTART_REFRESH = 'RESTART_REFRESH', // the user needs to restart the flow
  REFRESH_CLIENT_SENDS_REQUEST_NEW_TX = 'REFRESH_CLIENT_SENDS_REQUEST_NEW_TX', // triggers a request to the gatekeeper for a new transaction
  REFRESH_CLIENT_THIRD_PARTY_SENDS_REQUEST_NEW_TX = 'REFRESH_CLIENT_THIRD_PARTY_SENDS_REQUEST_NEW_TX', // triggers a request to the gatekeeper for a new transaction
  REFRESH_CLIENT_SENDS_START_NEW_TX = 'REFRESH_CLIENT_SENDS_START_NEW_TX', // We need to ask the user to request a new transaction
}

// A type that represents all GatewayStatuses, including the private statuses that are not exposed
export type InternalGatewayStatus = GatewayStatus | ExtendedGatewayStatus;
