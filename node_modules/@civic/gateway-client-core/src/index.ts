export { GatekeeperClient, getGatekeeperEndpoint } from './gatekeeperClient';

export { SignatureMethod, TokenState, State, ChainType } from './types/chain';
export type {
  ChainClientInterface,
  GatewayToken,
  ProveWalletOwnershipResponse,
  ChainEvent,
  DID,
  ChainDetails,
} from './types/chain';
export { ChainError, ErrorCode } from './utils/errors';

export { GatewayStatus } from './types/gateway';

export type { LogLevel } from './types/log';
export type { ErrorWithCode } from './types/errors';
export type { PendingPayload } from './types/gatekeeperApi';
export type * from './types/parameters';
export * from './types/eventInterface';
export * from './gatekeeperNetworkService';
export type { GatewayClientCoreInterface } from './types/gatewayCore';
export * from './types/flow';
export { default as logger, prefixLogger } from './logger';
export type { UserInteraction } from './types/userInteraction';
export * from './types/gateway';
export type { ClientCoreInput } from './types/clientCore';
export type * from './types/gatewayCore';
export type * from './types/ui';
import {
  GatewayClientCore,
  getInstanceInputObject,
  shouldUpdateInstance,
  hasRequiredInputs,
} from './GatewayClientCore';
export { sendAnalyticsEvent, sendOnCloseAnalyticsEvent } from './utils/analytics';
export type { CivicAnalyticsEvent } from './utils/analytics';

export { getInstanceInputObject, shouldUpdateInstance, hasRequiredInputs };
export default GatewayClientCore;
