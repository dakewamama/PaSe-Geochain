import { LogLevel } from './log';
export type Options = {
    autoShowModal?: boolean;
    logLevel?: LogLevel;
    hideWalletPrompts?: boolean;
    clientSendsMaxRetries?: number;
    disableAutoRestartOnValidationFailure?: boolean;
};
export interface WalletAdapter {
    address: string;
}
export type GatekeeperHttpConfig = {
    baseUrl: string;
    headers: Record<string, string>;
};
export type Stage = 'local' | 'test' | 'dev' | 'preprod' | 'prod';
export type GatewayClientParameters = {
    wallet: WalletAdapter | undefined;
    gatekeeperNetwork: string | undefined;
    payer?: string;
    gatekeeperSendsTransaction: boolean;
    stage?: Stage;
    redirectUrl?: string;
    options?: Options;
    expiryMarginSeconds?: number;
    partnerAppId?: string;
    expectTokenTimeoutSeconds?: number;
    disableInitialGatekeeperLookup?: boolean;
    gatekeeperConfig?: GatekeeperHttpConfig;
    flowIdPrefix?: string;
    xCivicClientHeader?: string;
    referrer?: string;
    domain?: string;
    gatekeeperPollingIntervalSeconds?: number;
};
export type DynamicGatewayClientParameters = {
    forceRequireRefresh?: boolean;
};
