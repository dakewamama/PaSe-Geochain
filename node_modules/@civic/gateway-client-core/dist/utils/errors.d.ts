import { LoggingInterface } from '../logger/provider.logger';
export declare const ErrorCode: {
    INSUFFICIENT_FUNDS: string;
    SIGN_TRANSACTION_ERROR: string;
    SIGN_TRANSACTION_USER_REJECTED_ERROR: string;
    SIGN_TRANSACTION_UNKNOWN_ERROR: string;
    SEND_TRANSACTION_ERROR: string;
    CUSTOM_HANDLE_TRANSACTION_ERROR: string;
    POWO_ERROR: string;
    CHAIN_CONFIRMATION_TIMEOUT_ERROR: string;
    TRANSACTION_FAILED_ON_CHAIN_ERROR: string;
    TRANSACTION_DROPPED_ERROR: string;
    TRANSACTION_CONFIRMATION_UNKNOWN_ERROR: string;
    BROWSER_CLOSED_WHILE_TRANSACTION_PENDING: string;
    EXPECTED_GATEKEEPER_RECORD: string;
};
export declare class ChainError extends Error {
    readonly errorCode?: string | undefined;
    constructor(message: string, errorCode?: string | undefined, useLogger?: LoggingInterface);
}
export declare class ChainConfirmationTimeout extends Error {
    readonly errorCode: string;
    constructor(message: string, errorCode?: string);
}
